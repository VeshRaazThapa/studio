{
    "id": "ZzaPdXTrSb8",
    "title": "C++ Tutorial for Beginners - Learn C++ in 1 Hour",
    "author": "Programming with Mosh",
    "transcript": [
        {
            "text": "welcome to the ultimate C++ course in",
            "start": 2.36,
            "duration": 4.399
        },
        {
            "text": "this course you're going to learn",
            "start": 5.359,
            "duration": 3.401
        },
        {
            "text": "everything you need to know about C++",
            "start": 6.759,
            "duration": 3.721
        },
        {
            "text": "from the basics to more advanced",
            "start": 8.76,
            "duration": 3.879
        },
        {
            "text": "concepts so by the end of this course",
            "start": 10.48,
            "duration": 4.44
        },
        {
            "text": "you'll be able to write C++ code with",
            "start": 12.639,
            "duration": 4.161
        },
        {
            "text": "confidence if you're looking for a",
            "start": 14.92,
            "duration": 4
        },
        {
            "text": "comprehensive easy to follow well",
            "start": 16.8,
            "duration": 4.36
        },
        {
            "text": "organized and practical course that",
            "start": 18.92,
            "duration": 4.199
        },
        {
            "text": "takes you from Zero to Hero this is the",
            "start": 21.16,
            "duration": 4.359
        },
        {
            "text": "right C++ course for you you don't need",
            "start": 23.119,
            "duration": 4.521
        },
        {
            "text": "any prior knowledge of C++ or",
            "start": 25.519,
            "duration": 3.84
        },
        {
            "text": "programming in general everything you",
            "start": 27.64,
            "duration": 4.119
        },
        {
            "text": "need to know about C++ is in one place",
            "start": 29.359,
            "duration": 4.2
        },
        {
            "text": "so you don't need to jump back and forth",
            "start": 31.759,
            "duration": 4.48
        },
        {
            "text": "between random tutorials my name is msh",
            "start": 33.559,
            "duration": 4.761
        },
        {
            "text": "hamadani I'm a software engineer with",
            "start": 36.239,
            "duration": 3.921
        },
        {
            "text": "over 20 years of experience and I've",
            "start": 38.32,
            "duration": 3.8
        },
        {
            "text": "taught millions of people how to code",
            "start": 40.16,
            "duration": 3.52
        },
        {
            "text": "through this Channel and my online",
            "start": 42.12,
            "duration": 4.52
        },
        {
            "text": "school code with.com if you're new here",
            "start": 43.68,
            "duration": 4.8
        },
        {
            "text": "be sure to subscribe as I upload new",
            "start": 46.64,
            "duration": 4.559
        },
        {
            "text": "videos all the time now let's jump in",
            "start": 48.48,
            "duration": 3.99
        },
        {
            "text": "and get",
            "start": 51.199,
            "duration": 6.121
        },
        {
            "text": "started before we start coding let's",
            "start": 57.879,
            "duration": 4.48
        },
        {
            "text": "spend a couple of minutes and talk about",
            "start": 60.28,
            "duration": 4.64
        },
        {
            "text": "C++ what you can do with it and how to",
            "start": 62.359,
            "duration": 7.12
        },
        {
            "text": "master it C++ is one of the most popular",
            "start": 64.92,
            "duration": 6.44
        },
        {
            "text": "programming languages in the world and",
            "start": 69.479,
            "duration": 3.96
        },
        {
            "text": "is the language of choice for building",
            "start": 71.36,
            "duration": 4.399
        },
        {
            "text": "performance critical applications video",
            "start": 73.439,
            "duration": 5.121
        },
        {
            "text": "games device drivers web browsers",
            "start": 75.759,
            "duration": 5.481
        },
        {
            "text": "servers operating systems and so on",
            "start": 78.56,
            "duration": 4.72
        },
        {
            "text": "that's why it's used by large companies",
            "start": 81.24,
            "duration": 5.76
        },
        {
            "text": "like Adobe Google Microsoft Netflix and",
            "start": 83.28,
            "duration": 5.76
        },
        {
            "text": "even government agencies like NASA just",
            "start": 87,
            "duration": 4.64
        },
        {
            "text": "to name a few every 3 years we get a new",
            "start": 89.04,
            "duration": 5.24
        },
        {
            "text": "version of C++ and the latest version at",
            "start": 91.64,
            "duration": 4.96
        },
        {
            "text": "this time is version 20 the next version",
            "start": 94.28,
            "duration": 4.64
        },
        {
            "text": "is coming out next year now there are",
            "start": 96.6,
            "duration": 4.4
        },
        {
            "text": "people like our famous superstar",
            "start": 98.92,
            "duration": 5.159
        },
        {
            "text": "developer John Smith who think that C++",
            "start": 101,
            "duration": 5.04
        },
        {
            "text": "is no longer relevant because of the",
            "start": 104.079,
            "duration": 4.881
        },
        {
            "text": "newer languages like Java or C that is",
            "start": 106.04,
            "duration": 6.119
        },
        {
            "text": "not true C++ is still one of the fastest",
            "start": 108.96,
            "duration": 5.64
        },
        {
            "text": "and most efficient languages available",
            "start": 112.159,
            "duration": 4.24
        },
        {
            "text": "so if you want to build an application",
            "start": 114.6,
            "duration": 4.08
        },
        {
            "text": "that needs to be fast and use memory",
            "start": 116.399,
            "duration": 5.32
        },
        {
            "text": "efficiently C ++ is a great choice this",
            "start": 118.68,
            "duration": 5.039
        },
        {
            "text": "is an advantage that it has over",
            "start": 121.719,
            "duration": 5.841
        },
        {
            "text": "languages like C and Java C++ is also",
            "start": 123.719,
            "duration": 6.04
        },
        {
            "text": "one of the first languages often taught",
            "start": 127.56,
            "duration": 4.12
        },
        {
            "text": "to computer science or software",
            "start": 129.759,
            "duration": 3.881
        },
        {
            "text": "engineering students because it has",
            "start": 131.68,
            "duration": 4.279
        },
        {
            "text": "influenced many programming languages",
            "start": 133.64,
            "duration": 6.16
        },
        {
            "text": "like C Java JavaScript typescript Dart",
            "start": 135.959,
            "duration": 6
        },
        {
            "text": "and so on so if you're looking for a job",
            "start": 139.8,
            "duration": 5
        },
        {
            "text": "as a software engineer learning s++ is a",
            "start": 141.959,
            "duration": 4.92
        },
        {
            "text": "great investment and opens a lot of",
            "start": 144.8,
            "duration": 4.64
        },
        {
            "text": "doors for you according to indeed.com",
            "start": 146.879,
            "duration": 5.161
        },
        {
            "text": "the average salary of a C++ programmer",
            "start": 149.44,
            "duration": 5
        },
        {
            "text": "in the US is just over",
            "start": 152.04,
            "duration": 6.36
        },
        {
            "text": "$170,000 a year now to master C++ there",
            "start": 154.44,
            "duration": 6.12
        },
        {
            "text": "are two things you need to learn one is",
            "start": 158.4,
            "duration": 4.6
        },
        {
            "text": "the C++ language itself meaning the",
            "start": 160.56,
            "duration": 5.319
        },
        {
            "text": "syntax or the grammar of this language",
            "start": 163,
            "duration": 4.319
        },
        {
            "text": "the second thing you need to learn is",
            "start": 165.879,
            "duration": 4.481
        },
        {
            "text": "the C++ standard library or STL which is",
            "start": 167.319,
            "duration": 5.881
        },
        {
            "text": "a collection of pre-written C++ code",
            "start": 170.36,
            "duration": 4.76
        },
        {
            "text": "that provides functionality that is",
            "start": 173.2,
            "duration": 4.52
        },
        {
            "text": "required by many applications examples",
            "start": 175.12,
            "duration": 5.24
        },
        {
            "text": "are data structures like list lists and",
            "start": 177.72,
            "duration": 5.12
        },
        {
            "text": "maps and algorithms for searching and",
            "start": 180.36,
            "duration": 4.64
        },
        {
            "text": "sorting data these functions are",
            "start": 182.84,
            "duration": 4.759
        },
        {
            "text": "required in almost every application so",
            "start": 185,
            "duration": 4.56
        },
        {
            "text": "instead of us creating all this",
            "start": 187.599,
            "duration": 4.2
        },
        {
            "text": "functionality from scratch every single",
            "start": 189.56,
            "duration": 4.92
        },
        {
            "text": "time we can reuse some of the C++ code",
            "start": 191.799,
            "duration": 5
        },
        {
            "text": "in this library to quickly build",
            "start": 194.48,
            "duration": 4.119
        },
        {
            "text": "applications in this course we'll",
            "start": 196.799,
            "duration": 4.08
        },
        {
            "text": "explore major functionalities in the",
            "start": 198.599,
            "duration": 4.081
        },
        {
            "text": "standard library but the standard",
            "start": 200.879,
            "duration": 4.08
        },
        {
            "text": "library is huge so we'll only scratch a",
            "start": 202.68,
            "duration": 4.32
        },
        {
            "text": "surface if you want to learn more there",
            "start": 204.959,
            "duration": 4.081
        },
        {
            "text": "are books specifically written on this",
            "start": 207,
            "duration": 5.2
        },
        {
            "text": "topic now a lot of people find C++ a bit",
            "start": 209.04,
            "duration": 5.16
        },
        {
            "text": "extensive and intimidating but in",
            "start": 212.2,
            "duration": 3.959
        },
        {
            "text": "reality you don't need to learn all of",
            "start": 214.2,
            "duration": 4.52
        },
        {
            "text": "C++ to be able to write substantial",
            "start": 216.159,
            "duration": 4.481
        },
        {
            "text": "programs for the same reason you don't",
            "start": 218.72,
            "duration": 3.76
        },
        {
            "text": "need to learn every feature your TV",
            "start": 220.64,
            "duration": 4.44
        },
        {
            "text": "provides just to use and enjoy it so in",
            "start": 222.48,
            "duration": 4.72
        },
        {
            "text": "this course we're going to explore C++",
            "start": 225.08,
            "duration": 4.6
        },
        {
            "text": "step by step and as we go I'm going to",
            "start": 227.2,
            "duration": 4.2
        },
        {
            "text": "show you how you can write some really",
            "start": 229.68,
            "duration": 4.68
        },
        {
            "text": "cool programs as you're learning C++",
            "start": 231.4,
            "duration": 4.679
        },
        {
            "text": "plus I'm going to give you plenty of",
            "start": 234.36,
            "duration": 4.079
        },
        {
            "text": "exercises to help you better understand",
            "start": 236.079,
            "duration": 4.681
        },
        {
            "text": "and remember the concept STS then you",
            "start": 238.439,
            "duration": 4.681
        },
        {
            "text": "will see that C++ is not really that",
            "start": 240.76,
            "duration": 4.399
        },
        {
            "text": "difficult so if you follow along by the",
            "start": 243.12,
            "duration": 3.479
        },
        {
            "text": "end of this course you'll be able to",
            "start": 245.159,
            "duration": 4.16
        },
        {
            "text": "write C++ code with confidence all right",
            "start": 246.599,
            "duration": 4.121
        },
        {
            "text": "next we're going to talk about the tools",
            "start": 249.319,
            "duration": 5.081
        },
        {
            "text": "you need to write C++",
            "start": 250.72,
            "duration": 3.68
        },
        {
            "text": "programs to create C++ programs we use",
            "start": 259.639,
            "duration": 5.361
        },
        {
            "text": "an integrated development environment or",
            "start": 262.759,
            "duration": 4.841
        },
        {
            "text": "IDE which is basically an application",
            "start": 265,
            "duration": 5.24
        },
        {
            "text": "that contains an editor for writing code",
            "start": 267.6,
            "duration": 5.319
        },
        {
            "text": "as well as build and debugging tools now",
            "start": 270.24,
            "duration": 4.36
        },
        {
            "text": "there are so many different ideas out",
            "start": 272.919,
            "duration": 3.641
        },
        {
            "text": "there some of them are free the others",
            "start": 274.6,
            "duration": 4
        },
        {
            "text": "are commercial but the top three ones",
            "start": 276.56,
            "duration": 5.04
        },
        {
            "text": "are Microsoft Visual Studio for Windows",
            "start": 278.6,
            "duration": 4.599
        },
        {
            "text": "the Community Edition is free you can",
            "start": 281.6,
            "duration": 3.76
        },
        {
            "text": "get it from the link on the screen there",
            "start": 283.199,
            "duration": 4.361
        },
        {
            "text": "is also a Mac version but the one on the",
            "start": 285.36,
            "duration": 4.88
        },
        {
            "text": "Mac is not really that great for Mac you",
            "start": 287.56,
            "duration": 4.56
        },
        {
            "text": "can use xcode which you can get from the",
            "start": 290.24,
            "duration": 4.56
        },
        {
            "text": "App Store we also have cion which is",
            "start": 292.12,
            "duration": 5.84
        },
        {
            "text": "crossplatform so it runs on Windows Mac",
            "start": 294.8,
            "duration": 6
        },
        {
            "text": "and Linux you can trade for free for 30",
            "start": 297.96,
            "duration": 5.4
        },
        {
            "text": "days but then it requires a license if",
            "start": 300.8,
            "duration": 4.36
        },
        {
            "text": "you don't want to pay for a license you",
            "start": 303.36,
            "duration": 3.679
        },
        {
            "text": "can use one of the free Alternatives",
            "start": 305.16,
            "duration": 3.64
        },
        {
            "text": "again there's so many different ideas",
            "start": 307.039,
            "duration": 5.121
        },
        {
            "text": "available for creating C++ programs in",
            "start": 308.8,
            "duration": 5.32
        },
        {
            "text": "this course I'm going to use C lion but",
            "start": 312.16,
            "duration": 3.879
        },
        {
            "text": "you don't have to use it to follow along",
            "start": 314.12,
            "duration": 4.12
        },
        {
            "text": "you can use any tool you prefer because",
            "start": 316.039,
            "duration": 4.641
        },
        {
            "text": "our Focus here is not on tooling it's on",
            "start": 318.24,
            "duration": 5.519
        },
        {
            "text": "the C++ language itself now if you're an",
            "start": 320.68,
            "duration": 5
        },
        {
            "text": "absolute beginner and you have never",
            "start": 323.759,
            "duration": 4.241
        },
        {
            "text": "coded before I recommend you to download",
            "start": 325.68,
            "duration": 4.4
        },
        {
            "text": "the free version of celan so you can",
            "start": 328,
            "duration": 4.44
        },
        {
            "text": "easily follow along and then later you",
            "start": 330.08,
            "duration": 4.44
        },
        {
            "text": "can either get a license or use one of",
            "start": 332.44,
            "duration": 3.16
        },
        {
            "text": "the free",
            "start": 334.52,
            "duration": 3.399
        },
        {
            "text": "Alternatives so head over to Jet",
            "start": 335.6,
            "duration": 3.879
        },
        {
            "text": "brains.com",
            "start": 337.919,
            "duration": 4.28
        },
        {
            "text": "celion download again you can see we",
            "start": 339.479,
            "duration": 5.241
        },
        {
            "text": "have versions for Windows Mac OS and",
            "start": 342.199,
            "duration": 5.12
        },
        {
            "text": "Linux just note that if you're on Mac",
            "start": 344.72,
            "duration": 4.72
        },
        {
            "text": "make sure to download The Right DMG",
            "start": 347.319,
            "duration": 3.16
        },
        {
            "text": "because here we have two different",
            "start": 349.44,
            "duration": 4.24
        },
        {
            "text": "builds one is for Intel the other is for",
            "start": 350.479,
            "duration": 5.121
        },
        {
            "text": "apple silicon so depending on the type",
            "start": 353.68,
            "duration": 4.28
        },
        {
            "text": "of processor that your Mac uses make",
            "start": 355.6,
            "duration": 4.4
        },
        {
            "text": "sure to download The Right DMG because",
            "start": 357.96,
            "duration": 3.519
        },
        {
            "text": "the difference in performance is",
            "start": 360,
            "duration": 4.16
        },
        {
            "text": "significant all right so go ahead and",
            "start": 361.479,
            "duration": 4.681
        },
        {
            "text": "install this in the next lesson we're",
            "start": 364.16,
            "duration": 6.68
        },
        {
            "text": "going to create our first C++ program",
            "start": 366.16,
            "duration": 4.68
        },
        {
            "text": "together so the first time you open C",
            "start": 376.639,
            "duration": 4.441
        },
        {
            "text": "lion you're going to see this popup box",
            "start": 379.08,
            "duration": 4.6
        },
        {
            "text": "for activating your license for now just",
            "start": 381.08,
            "duration": 5.6
        },
        {
            "text": "select start trial now you need to log",
            "start": 383.68,
            "duration": 6.28
        },
        {
            "text": "into your jet Brands account",
            "start": 386.68,
            "duration": 5.68
        },
        {
            "text": "so over here you can either sign in or",
            "start": 389.96,
            "duration": 4.56
        },
        {
            "text": "create a new account it's really simple",
            "start": 392.36,
            "duration": 4.36
        },
        {
            "text": "it's only going to take a minute or two",
            "start": 394.52,
            "duration": 5.36
        },
        {
            "text": "so I'm going to sign in with my",
            "start": 396.72,
            "duration": 6.72
        },
        {
            "text": "account good now back to cion we can",
            "start": 399.88,
            "duration": 5.28
        },
        {
            "text": "start our",
            "start": 403.44,
            "duration": 3.8
        },
        {
            "text": "trial now on this page we're going to",
            "start": 405.16,
            "duration": 5.159
        },
        {
            "text": "click on new project now on the top we",
            "start": 407.24,
            "duration": 5.76
        },
        {
            "text": "can specify the location of this project",
            "start": 410.319,
            "duration": 5.241
        },
        {
            "text": "so on my Mac it's going to be on users",
            "start": 413,
            "duration": 6.24
        },
        {
            "text": "SL my name/ celan project I'm going to",
            "start": 415.56,
            "duration": 8.039
        },
        {
            "text": "call this project hello world all in one",
            "start": 419.24,
            "duration": 6.959
        },
        {
            "text": "word without any spaces okay now over",
            "start": 423.599,
            "duration": 5.28
        },
        {
            "text": "here we can specify the C++ language",
            "start": 426.199,
            "duration": 5.44
        },
        {
            "text": "standard so by default version 14 is",
            "start": 428.879,
            "duration": 5
        },
        {
            "text": "selected but we can change that to a",
            "start": 431.639,
            "duration": 5.601
        },
        {
            "text": "higher version like 20 or 23 now because",
            "start": 433.879,
            "duration": 5.921
        },
        {
            "text": "23 is not official yet I would suggest",
            "start": 437.24,
            "duration": 5.799
        },
        {
            "text": "you to go with 20 good now let's create",
            "start": 439.8,
            "duration": 4.48
        },
        {
            "text": "this",
            "start": 443.039,
            "duration": 4.16
        },
        {
            "text": "project all right here's our first C++",
            "start": 444.28,
            "duration": 6.08
        },
        {
            "text": "program written in a file called",
            "start": 447.199,
            "duration": 5.84
        },
        {
            "text": "main.cpp if you accidentally close it",
            "start": 450.36,
            "duration": 4.76
        },
        {
            "text": "you can easily find it in the project",
            "start": 453.039,
            "duration": 7.121
        },
        {
            "text": "window so expand this folder and here is",
            "start": 455.12,
            "duration": 7.28
        },
        {
            "text": "main.cpp now we have another file in",
            "start": 460.16,
            "duration": 3.8
        },
        {
            "text": "this project called",
            "start": 462.4,
            "duration": 4.72
        },
        {
            "text": "cmakelists.txt we don't need that so",
            "start": 463.96,
            "duration": 5.239
        },
        {
            "text": "let's close it from here now we have the",
            "start": 467.12,
            "duration": 4.799
        },
        {
            "text": "same concept in other IDs like Visual",
            "start": 469.199,
            "duration": 5.481
        },
        {
            "text": "Studio or xcode so we have a project and",
            "start": 471.919,
            "duration": 4.921
        },
        {
            "text": "that project contains a file that is the",
            "start": 474.68,
            "duration": 4.88
        },
        {
            "text": "main file of our program now let's close",
            "start": 476.84,
            "duration": 4.88
        },
        {
            "text": "this window I'm going to delete all this",
            "start": 479.56,
            "duration": 3.68
        },
        {
            "text": "code because we're going to write it",
            "start": 481.72,
            "duration": 3.52
        },
        {
            "text": "from scratch so you understand how",
            "start": 483.24,
            "duration": 4.48
        },
        {
            "text": "everything works all right let's start",
            "start": 485.24,
            "duration": 5.2
        },
        {
            "text": "with a metaphor think of your TV your TV",
            "start": 487.72,
            "duration": 4.8
        },
        {
            "text": "has several functions it has functions",
            "start": 490.44,
            "duration": 4.159
        },
        {
            "text": "for changing the channel controlling the",
            "start": 492.52,
            "duration": 5.519
        },
        {
            "text": "volume and so on by the same token a C++",
            "start": 494.599,
            "duration": 6.841
        },
        {
            "text": "program consists of tens or hundreds or",
            "start": 498.039,
            "duration": 5.481
        },
        {
            "text": "thousands of functions each serving a",
            "start": 501.44,
            "duration": 4.12
        },
        {
            "text": "purpose now we have a special function",
            "start": 503.52,
            "duration": 4.44
        },
        {
            "text": "here called main which is the entry",
            "start": 505.56,
            "duration": 4.24
        },
        {
            "text": "point to our program this this is like",
            "start": 507.96,
            "duration": 4.48
        },
        {
            "text": "the power button of a TV okay now note",
            "start": 509.8,
            "duration": 5.599
        },
        {
            "text": "that C++ is a case sensitive language so",
            "start": 512.44,
            "duration": 4.64
        },
        {
            "text": "it's sensitive to lowercase and",
            "start": 515.399,
            "duration": 4.08
        },
        {
            "text": "uppercase letters so make sure to type",
            "start": 517.08,
            "duration": 4.24
        },
        {
            "text": "this exactly as I show you so if you",
            "start": 519.479,
            "duration": 4.281
        },
        {
            "text": "type a capital M here this is going to",
            "start": 521.32,
            "duration": 5.24
        },
        {
            "text": "have a different meaning okay so we're",
            "start": 523.76,
            "duration": 4.88
        },
        {
            "text": "defining a function now before the",
            "start": 526.56,
            "duration": 4.32
        },
        {
            "text": "function name we should specify the type",
            "start": 528.64,
            "duration": 4.68
        },
        {
            "text": "of value it's going to return this main",
            "start": 530.88,
            "duration": 5.2
        },
        {
            "text": "function should return a value of type",
            "start": 533.32,
            "duration": 5.6
        },
        {
            "text": "int which is short for integer and that",
            "start": 536.08,
            "duration": 5.439
        },
        {
            "text": "represents a whole number like 1 2 3 4",
            "start": 538.92,
            "duration": 5.32
        },
        {
            "text": "and so on so when we run our program the",
            "start": 541.519,
            "duration": 5.44
        },
        {
            "text": "operating system like Windows or Mac OS",
            "start": 544.24,
            "duration": 5.039
        },
        {
            "text": "is going to execute this function and",
            "start": 546.959,
            "duration": 4.361
        },
        {
            "text": "the value that this function returns",
            "start": 549.279,
            "duration": 4.081
        },
        {
            "text": "tells the operating system if our",
            "start": 551.32,
            "duration": 4.56
        },
        {
            "text": "program terminated successfully or not",
            "start": 553.36,
            "duration": 5.479
        },
        {
            "text": "okay so here we have int followed by",
            "start": 555.88,
            "duration": 5.16
        },
        {
            "text": "whitespace and then the name of the",
            "start": 558.839,
            "duration": 5
        },
        {
            "text": "function now whites spaces in C++ are",
            "start": 561.04,
            "duration": 5.6
        },
        {
            "text": "often ignored so whether we have one or",
            "start": 563.839,
            "duration": 5.081
        },
        {
            "text": "10 spaces it doesn't really matter but",
            "start": 566.64,
            "duration": 4.4
        },
        {
            "text": "in terms of formatting our code it's",
            "start": 568.92,
            "duration": 4.68
        },
        {
            "text": "better to go with one space because we",
            "start": 571.04,
            "duration": 4.799
        },
        {
            "text": "want to format this code professionally",
            "start": 573.6,
            "duration": 3.96
        },
        {
            "text": "just like how we write an article you",
            "start": 575.839,
            "duration": 3.56
        },
        {
            "text": "want to format our code just like a",
            "start": 577.56,
            "duration": 4.8
        },
        {
            "text": "published article okay now after the",
            "start": 579.399,
            "duration": 5.361
        },
        {
            "text": "function name we type a pair of",
            "start": 582.36,
            "duration": 4.84
        },
        {
            "text": "parentheses and inside the parenthesis",
            "start": 584.76,
            "duration": 4.92
        },
        {
            "text": "we can specify the parameters of this",
            "start": 587.2,
            "duration": 4.879
        },
        {
            "text": "function so a function can have zero or",
            "start": 589.68,
            "duration": 4.52
        },
        {
            "text": "more parameters for now let's not worry",
            "start": 592.079,
            "duration": 4.521
        },
        {
            "text": "about them we'll talk about them later",
            "start": 594.2,
            "duration": 5.28
        },
        {
            "text": "then we type a space again for proper",
            "start": 596.6,
            "duration": 6.08
        },
        {
            "text": "formatting followed by a pair of braces",
            "start": 599.48,
            "duration": 5.96
        },
        {
            "text": "now inside the braces we can type the",
            "start": 602.68,
            "duration": 4.96
        },
        {
            "text": "code for this function so whatever we",
            "start": 605.44,
            "duration": 4.56
        },
        {
            "text": "type here will be executed when the",
            "start": 607.64,
            "duration": 4.6
        },
        {
            "text": "operating system executes our main",
            "start": 610,
            "duration": 4.2
        },
        {
            "text": "function now once again in terms of",
            "start": 612.24,
            "duration": 3.839
        },
        {
            "text": "formatting there are two schools of",
            "start": 614.2,
            "duration": 4.28
        },
        {
            "text": "thought for adding the braces some",
            "start": 616.079,
            "duration": 4.561
        },
        {
            "text": "people like to add the left brace on the",
            "start": 618.48,
            "duration": 4.52
        },
        {
            "text": "same line as the function the other",
            "start": 620.64,
            "duration": 4.6
        },
        {
            "text": "people like to put the left brace on a",
            "start": 623,
            "duration": 4.519
        },
        {
            "text": "NE line there's really no right or wrong",
            "start": 625.24,
            "duration": 4.279
        },
        {
            "text": "here so whatever you prefer just stick",
            "start": 627.519,
            "duration": 4.041
        },
        {
            "text": "to that and make sure your code is",
            "start": 629.519,
            "duration": 4.081
        },
        {
            "text": "consistent in this course I'm going to",
            "start": 631.56,
            "duration": 4.48
        },
        {
            "text": "put the left brace on the same line",
            "start": 633.6,
            "duration": 5.359
        },
        {
            "text": "where we Define a function okay now in",
            "start": 636.04,
            "duration": 5.039
        },
        {
            "text": "this function we want to write code to",
            "start": 638.959,
            "duration": 4.201
        },
        {
            "text": "print something on the screen and for",
            "start": 641.079,
            "duration": 5
        },
        {
            "text": "that we're going to use the C++ standard",
            "start": 643.16,
            "duration": 5
        },
        {
            "text": "Library so earlier I told you that the",
            "start": 646.079,
            "duration": 4.081
        },
        {
            "text": "standard Library provides a bunch of",
            "start": 648.16,
            "duration": 4.04
        },
        {
            "text": "capabilities that we need in almost",
            "start": 650.16,
            "duration": 6.359
        },
        {
            "text": "every application so on the top we type",
            "start": 652.2,
            "duration": 8.6
        },
        {
            "text": "hashtag include and in angle brackets we",
            "start": 656.519,
            "duration": 6.521
        },
        {
            "text": "specify the name of one of the files in",
            "start": 660.8,
            "duration": 5.599
        },
        {
            "text": "the standard library that is IO stream",
            "start": 663.04,
            "duration": 7.239
        },
        {
            "text": "which is short for input output stream",
            "start": 666.399,
            "duration": 6.24
        },
        {
            "text": "in this file we have capabilities for",
            "start": 670.279,
            "duration": 4.161
        },
        {
            "text": "printing something on the screen or",
            "start": 672.639,
            "duration": 4.081
        },
        {
            "text": "getting input from the user so just like",
            "start": 674.44,
            "duration": 4.839
        },
        {
            "text": "a supermarket has different sections the",
            "start": 676.72,
            "duration": 4.64
        },
        {
            "text": "standard Library also has different",
            "start": 679.279,
            "duration": 4.8
        },
        {
            "text": "files each serving a purpose now as we",
            "start": 681.36,
            "duration": 4.159
        },
        {
            "text": "go through the course you will learn",
            "start": 684.079,
            "duration": 3.121
        },
        {
            "text": "about the other files in the standard",
            "start": 685.519,
            "duration": 4.681
        },
        {
            "text": "Library Okay so back to our main",
            "start": 687.2,
            "duration": 5.68
        },
        {
            "text": "function now here we type STD that is",
            "start": 690.2,
            "duration": 5.36
        },
        {
            "text": "short for standard library and this is",
            "start": 692.88,
            "duration": 5.079
        },
        {
            "text": "like a bucket or a container for the",
            "start": 695.56,
            "duration": 4.079
        },
        {
            "text": "features that are currently available to",
            "start": 697.959,
            "duration": 4.281
        },
        {
            "text": "us so the features we have imported on",
            "start": 699.639,
            "duration": 5.2
        },
        {
            "text": "the top okay so if you type double",
            "start": 702.24,
            "duration": 5.44
        },
        {
            "text": "colons we can see all these features now",
            "start": 704.839,
            "duration": 4.201
        },
        {
            "text": "there are a ton of features here don't",
            "start": 707.68,
            "duration": 3.52
        },
        {
            "text": "worry about any of them in this lesson",
            "start": 709.04,
            "duration": 5.479
        },
        {
            "text": "we're going to use see out that is short",
            "start": 711.2,
            "duration": 5.6
        },
        {
            "text": "for character out some people think this",
            "start": 714.519,
            "duration": 4.481
        },
        {
            "text": "is short for console out that is not",
            "start": 716.8,
            "duration": 4.76
        },
        {
            "text": "correct correct so using this object we",
            "start": 719,
            "duration": 5.2
        },
        {
            "text": "can output one or more characters on the",
            "start": 721.56,
            "duration": 6.2
        },
        {
            "text": "screen so we type a space followed by",
            "start": 724.2,
            "duration": 6.84
        },
        {
            "text": "two left angle brackets in other space",
            "start": 727.76,
            "duration": 5.28
        },
        {
            "text": "and then in double quotes we type the",
            "start": 731.04,
            "duration": 4
        },
        {
            "text": "text we want to print on the screen so",
            "start": 733.04,
            "duration": 5.52
        },
        {
            "text": "hello world okay and then we terminate",
            "start": 735.04,
            "duration": 6.2
        },
        {
            "text": "this line using a semicolon just like",
            "start": 738.56,
            "duration": 4.839
        },
        {
            "text": "how we terminate our sentences with a",
            "start": 741.24,
            "duration": 5.599
        },
        {
            "text": "period so in C++ this line is called a",
            "start": 743.399,
            "duration": 5.521
        },
        {
            "text": "statement because it tells the operating",
            "start": 746.839,
            "duration": 4.12
        },
        {
            "text": "system and what to do so whenever we",
            "start": 748.92,
            "duration": 3.88
        },
        {
            "text": "typee a statement we should terminate it",
            "start": 750.959,
            "duration": 5.921
        },
        {
            "text": "with a semicolon okay now finally we",
            "start": 752.8,
            "duration": 6.64
        },
        {
            "text": "return the value of zero and once again",
            "start": 756.88,
            "duration": 4.48
        },
        {
            "text": "we need to terminate this with a",
            "start": 759.44,
            "duration": 4.959
        },
        {
            "text": "semicolon but why zero well zero tells",
            "start": 761.36,
            "duration": 5.2
        },
        {
            "text": "the operating system that our program is",
            "start": 764.399,
            "duration": 4.481
        },
        {
            "text": "going to terminate correctly if we",
            "start": 766.56,
            "duration": 4.719
        },
        {
            "text": "return any other values positive or",
            "start": 768.88,
            "duration": 4.48
        },
        {
            "text": "negative that means our program",
            "start": 771.279,
            "duration": 4.56
        },
        {
            "text": "encountered an error okay so let's",
            "start": 773.36,
            "duration": 4.56
        },
        {
            "text": "quickly recap what we have done so far",
            "start": 775.839,
            "duration": 4.881
        },
        {
            "text": "on the top we included one of the files",
            "start": 777.92,
            "duration": 4.96
        },
        {
            "text": "in the standard library for printing",
            "start": 780.72,
            "duration": 4.96
        },
        {
            "text": "something on the screen then we defined",
            "start": 782.88,
            "duration": 4.639
        },
        {
            "text": "the main function which is the entry",
            "start": 785.68,
            "duration": 4.32
        },
        {
            "text": "point to our program now as you can see",
            "start": 787.519,
            "duration": 5
        },
        {
            "text": "the main function returns an integer",
            "start": 790,
            "duration": 5.16
        },
        {
            "text": "which is a whole number like 0 1 2 3 and",
            "start": 792.519,
            "duration": 6.081
        },
        {
            "text": "so on and in between the braces we have",
            "start": 795.16,
            "duration": 6.28
        },
        {
            "text": "written the code for this function so on",
            "start": 798.6,
            "duration": 5.12
        },
        {
            "text": "the first line we print something on the",
            "start": 801.44,
            "duration": 4.959
        },
        {
            "text": "screen and on the second line return the",
            "start": 803.72,
            "duration": 4.919
        },
        {
            "text": "value of zero as simple as that this is",
            "start": 806.399,
            "duration": 5.361
        },
        {
            "text": "your first first C++ program next I'm",
            "start": 808.639,
            "duration": 4.961
        },
        {
            "text": "going to show you how to compile and run",
            "start": 811.76,
            "duration": 4.079
        },
        {
            "text": "this",
            "start": 813.6,
            "duration": 2.239
        },
        {
            "text": "program now to run this program first we",
            "start": 821.72,
            "duration": 4.72
        },
        {
            "text": "have to compile this code to machine",
            "start": 824.72,
            "duration": 4.2
        },
        {
            "text": "code that can be run by the computer's",
            "start": 826.44,
            "duration": 5.079
        },
        {
            "text": "operating system so the machine code is",
            "start": 828.92,
            "duration": 4.64
        },
        {
            "text": "basically the native language that a",
            "start": 831.519,
            "duration": 4.361
        },
        {
            "text": "computer's operating system understands",
            "start": 833.56,
            "duration": 3.92
        },
        {
            "text": "and it's different from one operating",
            "start": 835.88,
            "duration": 4
        },
        {
            "text": "system to another so if we compile this",
            "start": 837.48,
            "duration": 4.52
        },
        {
            "text": "code on a Windows machine we get an",
            "start": 839.88,
            "duration": 4.92
        },
        {
            "text": "executable but that executable only runs",
            "start": 842,
            "duration": 5.24
        },
        {
            "text": "on Windows we cannot run it on Mac or",
            "start": 844.8,
            "duration": 4.839
        },
        {
            "text": "Linux if you want to run our application",
            "start": 847.24,
            "duration": 4.68
        },
        {
            "text": "on a Mac computer we have to take this",
            "start": 849.639,
            "duration": 5.2
        },
        {
            "text": "code on a Mac and recompile it to get an",
            "start": 851.92,
            "duration": 5.96
        },
        {
            "text": "executable for Mac okay so back to our",
            "start": 854.839,
            "duration": 5.481
        },
        {
            "text": "code to run this program we're going to",
            "start": 857.88,
            "duration": 4.92
        },
        {
            "text": "click on this play icon on the toolbar",
            "start": 860.32,
            "duration": 4.879
        },
        {
            "text": "now look at the shortcut on Mac it's",
            "start": 862.8,
            "duration": 5.159
        },
        {
            "text": "control and R always use shortcuts",
            "start": 865.199,
            "duration": 5.2
        },
        {
            "text": "because they make your life easier so",
            "start": 867.959,
            "duration": 3.841
        },
        {
            "text": "let's run this",
            "start": 870.399,
            "duration": 3.761
        },
        {
            "text": "program we get this little window down",
            "start": 871.8,
            "duration": 4.88
        },
        {
            "text": "the bottom this is called the console or",
            "start": 874.16,
            "duration": 4.64
        },
        {
            "text": "The Terminal window it's basically a way",
            "start": 876.68,
            "duration": 4.959
        },
        {
            "text": "to see the output of our program so over",
            "start": 878.8,
            "duration": 6.08
        },
        {
            "text": "here you can see the hello world message",
            "start": 881.639,
            "duration": 5.2
        },
        {
            "text": "so we're using a console application",
            "start": 884.88,
            "duration": 4.16
        },
        {
            "text": "here because console applications are",
            "start": 886.839,
            "duration": 4.481
        },
        {
            "text": "easier to create especially for people",
            "start": 889.04,
            "duration": 4.56
        },
        {
            "text": "learning a new language building",
            "start": 891.32,
            "duration": 3.92
        },
        {
            "text": "applications with a graphical user",
            "start": 893.6,
            "duration": 5.239
        },
        {
            "text": "interface or GUI is way more complex so",
            "start": 895.24,
            "duration": 5.56
        },
        {
            "text": "one once you understand the basics of",
            "start": 898.839,
            "duration": 4.321
        },
        {
            "text": "C++ you'll be ready to move on to",
            "start": 900.8,
            "duration": 4.36
        },
        {
            "text": "writing applications with a graphical",
            "start": 903.16,
            "duration": 4.119
        },
        {
            "text": "user interface if that's what you want",
            "start": 905.16,
            "duration": 6.359
        },
        {
            "text": "okay now let's minimize this window and",
            "start": 907.279,
            "duration": 6.201
        },
        {
            "text": "make a tiny problem in this code so I'm",
            "start": 911.519,
            "duration": 5.521
        },
        {
            "text": "going to remove this semicolon now let's",
            "start": 913.48,
            "duration": 4.96
        },
        {
            "text": "rerun our",
            "start": 917.04,
            "duration": 4.84
        },
        {
            "text": "program all right look this time we get",
            "start": 918.44,
            "duration": 6.079
        },
        {
            "text": "a compilation error pointing to this",
            "start": 921.88,
            "duration": 5.28
        },
        {
            "text": "line so the error is reminding us that",
            "start": 924.519,
            "duration": 5.24
        },
        {
            "text": "we have forgotten a semicolon if you're",
            "start": 927.16,
            "duration": 4.88
        },
        {
            "text": "starting out it's completely normal to",
            "start": 929.759,
            "duration": 4.121
        },
        {
            "text": "encounter these errors if you have a",
            "start": 932.04,
            "duration": 4.919
        },
        {
            "text": "typo or miss a semicolon and so on don't",
            "start": 933.88,
            "duration": 5.399
        },
        {
            "text": "let that discourage you remember",
            "start": 936.959,
            "duration": 4.68
        },
        {
            "text": "patience is the first skill of a good",
            "start": 939.279,
            "duration": 4.601
        },
        {
            "text": "programmer so if your code doesn't get",
            "start": 941.639,
            "duration": 4.44
        },
        {
            "text": "compiled pay close attention to this",
            "start": 943.88,
            "duration": 4.639
        },
        {
            "text": "video see what exactly I'm typing",
            "start": 946.079,
            "duration": 4.76
        },
        {
            "text": "compared with your code I promise if you",
            "start": 948.519,
            "duration": 4.161
        },
        {
            "text": "pay close attention you'll be able to",
            "start": 950.839,
            "duration": 4.761
        },
        {
            "text": "solve issues on your own so let's fix",
            "start": 952.68,
            "duration": 3.56
        },
        {
            "text": "the",
            "start": 955.6,
            "duration": 2.599
        },
        {
            "text": "issue all right let's move on to the",
            "start": 956.24,
            "duration": 4.68
        },
        {
            "text": "next lesson",
            "start": 958.199,
            "duration": 2.721
        },
        {
            "text": "now going forward I want to change the",
            "start": 967.279,
            "duration": 4.04
        },
        {
            "text": "colors here and I wanted to show you how",
            "start": 969.319,
            "duration": 3.921
        },
        {
            "text": "to do that because a lot of people ask",
            "start": 971.319,
            "duration": 4.681
        },
        {
            "text": "me about the themes I use in my videos",
            "start": 973.24,
            "duration": 4.959
        },
        {
            "text": "if you're not using cion feel free to",
            "start": 976,
            "duration": 6.199
        },
        {
            "text": "move on to the next lesson so on the top",
            "start": 978.199,
            "duration": 5.681
        },
        {
            "text": "we go to the preferences",
            "start": 982.199,
            "duration": 4.961
        },
        {
            "text": "menu then under appearance and behavior",
            "start": 983.88,
            "duration": 5.879
        },
        {
            "text": "we select appearance now over here you",
            "start": 987.16,
            "duration": 4.799
        },
        {
            "text": "can see the themes that are installed by",
            "start": 989.759,
            "duration": 4.601
        },
        {
            "text": "default we only have four themes but we",
            "start": 991.959,
            "duration": 4.921
        },
        {
            "text": "can get more themes by clicking on this",
            "start": 994.36,
            "duration": 5.68
        },
        {
            "text": "link now on this page I'm going to sort",
            "start": 996.88,
            "duration": 6.399
        },
        {
            "text": "this list by the number of downloads so",
            "start": 1000.04,
            "duration": 5.919
        },
        {
            "text": "we can see the popular ones I'm going to",
            "start": 1003.279,
            "duration": 5.641
        },
        {
            "text": "pick Dracula theme it's a very popular",
            "start": 1005.959,
            "duration": 4.68
        },
        {
            "text": "theme but feel free to play with these",
            "start": 1008.92,
            "duration": 3.32
        },
        {
            "text": "themes and find the one that you",
            "start": 1010.639,
            "duration": 4.921
        },
        {
            "text": "personally like so let's install",
            "start": 1012.24,
            "duration": 5.24
        },
        {
            "text": "this",
            "start": 1015.56,
            "duration": 6.24
        },
        {
            "text": "accept good now okay so this is the",
            "start": 1017.48,
            "duration": 6.32
        },
        {
            "text": "dracul theme which is much better than",
            "start": 1021.8,
            "duration": 4.8
        },
        {
            "text": "the default theme that comes with cion",
            "start": 1023.8,
            "duration": 4.399
        },
        {
            "text": "so that brings us to the end of this",
            "start": 1026.6,
            "duration": 3.239
        },
        {
            "text": "section in the next section we're going",
            "start": 1028.199,
            "duration": 4.6
        },
        {
            "text": "to talk about the basics of C++ so I",
            "start": 1029.839,
            "duration": 5.641
        },
        {
            "text": "will see you in the next",
            "start": 1032.799,
            "duration": 2.681
        },
        {
            "text": "section now let me give you a quick",
            "start": 1037.919,
            "duration": 4.081
        },
        {
            "text": "overview of how I've structured the",
            "start": 1040.199,
            "duration": 5.161
        },
        {
            "text": "course so you can get the most out of it",
            "start": 1042,
            "duration": 5.36
        },
        {
            "text": "this course is the first part of my",
            "start": 1045.36,
            "duration": 4.16
        },
        {
            "text": "complete C++ series",
            "start": 1047.36,
            "duration": 4.679
        },
        {
            "text": "each part is about 3 to 4 hours long so",
            "start": 1049.52,
            "duration": 4.36
        },
        {
            "text": "you can easily complete it in a day or",
            "start": 1052.039,
            "duration": 4.121
        },
        {
            "text": "two in the first part which is the one",
            "start": 1053.88,
            "duration": 4.88
        },
        {
            "text": "you're watching we explore the basics in",
            "start": 1056.16,
            "duration": 3.92
        },
        {
            "text": "this part you will learn the",
            "start": 1058.76,
            "duration": 4.36
        },
        {
            "text": "fundamentals of programming in C++ data",
            "start": 1060.08,
            "duration": 5.92
        },
        {
            "text": "types decision-making statements loops",
            "start": 1063.12,
            "duration": 5.12
        },
        {
            "text": "and functions now throughout the course",
            "start": 1066,
            "duration": 3.44
        },
        {
            "text": "I'm going to give you plenty of",
            "start": 1068.24,
            "duration": 3.64
        },
        {
            "text": "exercises to help you develop your",
            "start": 1069.44,
            "duration": 4.52
        },
        {
            "text": "problem solving skills and build your",
            "start": 1071.88,
            "duration": 4.64
        },
        {
            "text": "confidence in writing code in fact many",
            "start": 1073.96,
            "duration": 4.92
        },
        {
            "text": "of these exercises are popular interview",
            "start": 1076.52,
            "duration": 4.96
        },
        {
            "text": "your questions in the second part we'll",
            "start": 1078.88,
            "duration": 5.279
        },
        {
            "text": "explore intermediate level Concepts such",
            "start": 1081.48,
            "duration": 6.36
        },
        {
            "text": "as arrays pointers strings structures",
            "start": 1084.159,
            "duration": 6.64
        },
        {
            "text": "enumerations and streams and finally in",
            "start": 1087.84,
            "duration": 4.88
        },
        {
            "text": "the last part we'll be talking about the",
            "start": 1090.799,
            "duration": 4.601
        },
        {
            "text": "advanced concepts such as classes",
            "start": 1092.72,
            "duration": 6.079
        },
        {
            "text": "exceptions templates containers and more",
            "start": 1095.4,
            "duration": 5.56
        },
        {
            "text": "so by the end of this series you will",
            "start": 1098.799,
            "duration": 5
        },
        {
            "text": "have a solid understanding of C++ and",
            "start": 1100.96,
            "duration": 5.16
        },
        {
            "text": "you'll be ready to apply it in real life",
            "start": 1103.799,
            "duration": 3.88
        },
        {
            "text": "for example if you want to build games",
            "start": 1106.12,
            "duration": 3.84
        },
        {
            "text": "with Unreal Engine which is a popular",
            "start": 1107.679,
            "duration": 4.041
        },
        {
            "text": "gaming engine you will have the",
            "start": 1109.96,
            "duration": 4.52
        },
        {
            "text": "necessary C++ skills to build games you",
            "start": 1111.72,
            "duration": 5.12
        },
        {
            "text": "just need to learn about Unreal Engine",
            "start": 1114.48,
            "duration": 4.4
        },
        {
            "text": "so I hope you stick around and master",
            "start": 1116.84,
            "duration": 4.88
        },
        {
            "text": "C++ one of the fastest and most",
            "start": 1118.88,
            "duration": 6.4
        },
        {
            "text": "efficient programming languages",
            "start": 1121.72,
            "duration": 3.56
        },
        {
            "text": "available hey guys msh here I just",
            "start": 1128.679,
            "duration": 4.24
        },
        {
            "text": "wanted to say that you don't really have",
            "start": 1131.159,
            "duration": 4.081
        },
        {
            "text": "to memorize anything in this course I've",
            "start": 1132.919,
            "duration": 4.481
        },
        {
            "text": "put together a complete cheat sheet and",
            "start": 1135.24,
            "duration": 3.76
        },
        {
            "text": "summary notes for you that you can",
            "start": 1137.4,
            "duration": 4.36
        },
        {
            "text": "download as a PDF right below this video",
            "start": 1139,
            "duration": 4.679
        },
        {
            "text": "so click the link in the description to",
            "start": 1141.76,
            "duration": 4.64
        },
        {
            "text": "download this PDF so I have done my best",
            "start": 1143.679,
            "duration": 5.561
        },
        {
            "text": "to create the simplest C++ tutorial for",
            "start": 1146.4,
            "duration": 5.24
        },
        {
            "text": "you so if you enjoy this please support",
            "start": 1149.24,
            "duration": 4.679
        },
        {
            "text": "my hard work by liking and sharing this",
            "start": 1151.64,
            "duration": 4.88
        },
        {
            "text": "video and also be sure to subscribe as I",
            "start": 1153.919,
            "duration": 6.161
        },
        {
            "text": "upload new videos all the",
            "start": 1156.52,
            "duration": 3.56
        },
        {
            "text": "time welcome back to the ultimate C++",
            "start": 1161.28,
            "duration": 5
        },
        {
            "text": "course in this section we're going to",
            "start": 1164.28,
            "duration": 5.399
        },
        {
            "text": "talk about the basics of C++ will cover",
            "start": 1166.28,
            "duration": 5.519
        },
        {
            "text": "variables and constants naming",
            "start": 1169.679,
            "duration": 4.161
        },
        {
            "text": "conventions coding mathematical",
            "start": 1171.799,
            "duration": 4.521
        },
        {
            "text": "Expressions writing to and reading from",
            "start": 1173.84,
            "duration": 4.52
        },
        {
            "text": "the console working with the standard",
            "start": 1176.32,
            "duration": 4.56
        },
        {
            "text": "library and comments so by the end of",
            "start": 1178.36,
            "duration": 4.199
        },
        {
            "text": "this section you'll be able to write",
            "start": 1180.88,
            "duration": 5.159
        },
        {
            "text": "simple but really useful programs in C++",
            "start": 1182.559,
            "duration": 6.921
        },
        {
            "text": "now let's jump in and get",
            "start": 1186.039,
            "duration": 3.441
        },
        {
            "text": "started all right let's talk about",
            "start": 1197.64,
            "duration": 4.2
        },
        {
            "text": "variables in programming we use",
            "start": 1199.52,
            "duration": 4.92
        },
        {
            "text": "variables to temporarily store data in",
            "start": 1201.84,
            "duration": 5.56
        },
        {
            "text": "the computer's memory now technically a",
            "start": 1204.44,
            "duration": 5.04
        },
        {
            "text": "variable is the name of a location in",
            "start": 1207.4,
            "duration": 4.6
        },
        {
            "text": "memory where we can store some value now",
            "start": 1209.48,
            "duration": 4.72
        },
        {
            "text": "because the value can change we refer to",
            "start": 1212,
            "duration": 4.76
        },
        {
            "text": "this location as a variable now to",
            "start": 1214.2,
            "duration": 5.359
        },
        {
            "text": "declare a variable in C++ first we have",
            "start": 1216.76,
            "duration": 5.039
        },
        {
            "text": "to specify the type of data we want to",
            "start": 1219.559,
            "duration": 5.201
        },
        {
            "text": "store let's say int or integer for",
            "start": 1221.799,
            "duration": 5.441
        },
        {
            "text": "storing whole numbers then we give our",
            "start": 1224.76,
            "duration": 5.48
        },
        {
            "text": "variable a proper meaningful name like",
            "start": 1227.24,
            "duration": 6.36
        },
        {
            "text": "file size now there are various ways to",
            "start": 1230.24,
            "duration": 4.88
        },
        {
            "text": "name our variables we have various",
            "start": 1233.6,
            "duration": 3.48
        },
        {
            "text": "conventions we'll talk about them",
            "start": 1235.12,
            "duration": 4.4
        },
        {
            "text": "momentarily once we declare a variable",
            "start": 1237.08,
            "duration": 4.839
        },
        {
            "text": "then we terminate the statement with a",
            "start": 1239.52,
            "duration": 4.88
        },
        {
            "text": "semicolon now I want to emphasize that",
            "start": 1241.919,
            "duration": 4.24
        },
        {
            "text": "you should always use meaningful names",
            "start": 1244.4,
            "duration": 3.44
        },
        {
            "text": "for your variables don't use",
            "start": 1246.159,
            "duration": 4.241
        },
        {
            "text": "abbreviations like FS because someone",
            "start": 1247.84,
            "duration": 4.8
        },
        {
            "text": "else reading this code may not know what",
            "start": 1250.4,
            "duration": 5.24
        },
        {
            "text": "FS is short for also don't go for names",
            "start": 1252.64,
            "duration": 6.6
        },
        {
            "text": "like F1 or F2 or thing these are all",
            "start": 1255.64,
            "duration": 6.48
        },
        {
            "text": "cryptic and ambiguous okay so we're",
            "start": 1259.24,
            "duration": 5.64
        },
        {
            "text": "going to call this file size and then we",
            "start": 1262.12,
            "duration": 6.2
        },
        {
            "text": "can give it a value like 100 so we",
            "start": 1264.88,
            "duration": 6.64
        },
        {
            "text": "assign it the value of 100 now here we",
            "start": 1268.32,
            "duration": 5.32
        },
        {
            "text": "can combine these two statements into a",
            "start": 1271.52,
            "duration": 4.72
        },
        {
            "text": "single statement and that makes our code",
            "start": 1273.64,
            "duration": 5.68
        },
        {
            "text": "shorter and more concise so right here",
            "start": 1276.24,
            "duration": 5.12
        },
        {
            "text": "where we declare our variable we can",
            "start": 1279.32,
            "duration": 5.599
        },
        {
            "text": "give it an initial value of 100 this is",
            "start": 1281.36,
            "duration": 6.52
        },
        {
            "text": "called initializing a variable now we",
            "start": 1284.919,
            "duration": 5.64
        },
        {
            "text": "don't need the second line okay now",
            "start": 1287.88,
            "duration": 4.64
        },
        {
            "text": "let's declare another variable for",
            "start": 1290.559,
            "duration": 4.841
        },
        {
            "text": "storing numbers with a decimal point for",
            "start": 1292.52,
            "duration": 4.36
        },
        {
            "text": "that we're going to use a different data",
            "start": 1295.4,
            "duration": 3.8
        },
        {
            "text": "type that is double we're going to talk",
            "start": 1296.88,
            "duration": 3.96
        },
        {
            "text": "about different data types in the next",
            "start": 1299.2,
            "duration": 3.599
        },
        {
            "text": "section so in this section we're only",
            "start": 1300.84,
            "duration": 5.04
        },
        {
            "text": "going to work with integers and doubles",
            "start": 1302.799,
            "duration": 5.721
        },
        {
            "text": "now we're going to call this sales and",
            "start": 1305.88,
            "duration": 4.72
        },
        {
            "text": "initialize it to",
            "start": 1308.52,
            "duration": 4.96
        },
        {
            "text": "9.99 okay now that we have two variables",
            "start": 1310.6,
            "duration": 5.559
        },
        {
            "text": "we can print them on the console so",
            "start": 1313.48,
            "duration": 5.64
        },
        {
            "text": "instead of hello world let's print file",
            "start": 1316.159,
            "duration": 7.281
        },
        {
            "text": "size run our program we see 100",
            "start": 1319.12,
            "duration": 6.799
        },
        {
            "text": "beautiful now while initializing",
            "start": 1323.44,
            "duration": 4.839
        },
        {
            "text": "variables is not mandatory it's a good",
            "start": 1325.919,
            "duration": 4.201
        },
        {
            "text": "practice to follow let's see what",
            "start": 1328.279,
            "duration": 4.601
        },
        {
            "text": "happens if we don't initialize file size",
            "start": 1330.12,
            "duration": 5.12
        },
        {
            "text": "and print it on the terminal well",
            "start": 1332.88,
            "duration": 4.6
        },
        {
            "text": "immediately we see this warning let's",
            "start": 1335.24,
            "duration": 4.919
        },
        {
            "text": "take a look the warning is saying",
            "start": 1337.48,
            "duration": 5.12
        },
        {
            "text": "variable file size is uninitialized when",
            "start": 1340.159,
            "duration": 5.481
        },
        {
            "text": "used here initialize local variable file",
            "start": 1342.6,
            "duration": 5.64
        },
        {
            "text": "size so our ID is complaining that we",
            "start": 1345.64,
            "duration": 4.44
        },
        {
            "text": "are using using a variable that doesn't",
            "start": 1348.24,
            "duration": 4.08
        },
        {
            "text": "have an initial value let's run our",
            "start": 1350.08,
            "duration": 5.719
        },
        {
            "text": "program and see what happens take a look",
            "start": 1352.32,
            "duration": 6.44
        },
        {
            "text": "look we get this random value and if we",
            "start": 1355.799,
            "duration": 6.281
        },
        {
            "text": "run our program multiple times we see a",
            "start": 1358.76,
            "duration": 5
        },
        {
            "text": "completely different value this is what",
            "start": 1362.08,
            "duration": 4
        },
        {
            "text": "we call garbage this is the data that is",
            "start": 1363.76,
            "duration": 5.12
        },
        {
            "text": "currently in memory so as a best",
            "start": 1366.08,
            "duration": 5.68
        },
        {
            "text": "practice we should always initialize our",
            "start": 1368.88,
            "duration": 5.24
        },
        {
            "text": "variables before using them so I'm going",
            "start": 1371.76,
            "duration": 4.88
        },
        {
            "text": "to set this to an initial value of zero",
            "start": 1374.12,
            "duration": 5.039
        },
        {
            "text": "now in languages like C or we don't have",
            "start": 1376.64,
            "duration": 5.24
        },
        {
            "text": "to do this if we declare an integer it",
            "start": 1379.159,
            "duration": 4.88
        },
        {
            "text": "automatically gets initialized to zero",
            "start": 1381.88,
            "duration": 5.2
        },
        {
            "text": "but this is not how it works in C++ okay",
            "start": 1384.039,
            "duration": 4.76
        },
        {
            "text": "so this is how we can declare and",
            "start": 1387.08,
            "duration": 3.959
        },
        {
            "text": "initialize variables and by the way we",
            "start": 1388.799,
            "duration": 4.841
        },
        {
            "text": "can also initialize multiple variables",
            "start": 1391.039,
            "duration": 4.921
        },
        {
            "text": "on the same line so over here we can",
            "start": 1393.64,
            "duration": 4.96
        },
        {
            "text": "declare a second integer let's call that",
            "start": 1395.96,
            "duration": 5.68
        },
        {
            "text": "counter so we add a comma and then",
            "start": 1398.6,
            "duration": 5.28
        },
        {
            "text": "declare counter and optionally we can",
            "start": 1401.64,
            "duration": 5.6
        },
        {
            "text": "initialize it to some value now while",
            "start": 1403.88,
            "duration": 6.32
        },
        {
            "text": "this works it's of discouraged as a best",
            "start": 1407.24,
            "duration": 5
        },
        {
            "text": "practice we should declare each variable",
            "start": 1410.2,
            "duration": 4.32
        },
        {
            "text": "on a separate line so I'm going to",
            "start": 1412.24,
            "duration": 4.799
        },
        {
            "text": "remove this and declare another",
            "start": 1414.52,
            "duration": 6.48
        },
        {
            "text": "integer like this okay now I have a",
            "start": 1417.039,
            "duration": 5.801
        },
        {
            "text": "small exercise for you I want you to",
            "start": 1421,
            "duration": 4.52
        },
        {
            "text": "write code to swap the value of two",
            "start": 1422.84,
            "duration": 4.88
        },
        {
            "text": "variables this is a common interview",
            "start": 1425.52,
            "duration": 4.44
        },
        {
            "text": "question so let me explain what I mean",
            "start": 1427.72,
            "duration": 5
        },
        {
            "text": "we're going to declare two variables A",
            "start": 1429.96,
            "duration": 6.68
        },
        {
            "text": "and B now if we print a we're going to",
            "start": 1432.72,
            "duration": 6.6
        },
        {
            "text": "see one on the terminal right now here's",
            "start": 1436.64,
            "duration": 5.72
        },
        {
            "text": "what I want you to do over here I want",
            "start": 1439.32,
            "duration": 5.92
        },
        {
            "text": "you to write code to swap the value of",
            "start": 1442.36,
            "duration": 5.64
        },
        {
            "text": "these variables so when we print a we",
            "start": 1445.24,
            "duration": 6.36
        },
        {
            "text": "see two and when we print B we see one",
            "start": 1448,
            "duration": 5.08
        },
        {
            "text": "now I don't want you to reset these",
            "start": 1451.6,
            "duration": 3.64
        },
        {
            "text": "variables so I don't want you to set a",
            "start": 1453.08,
            "duration": 4.719
        },
        {
            "text": "to two and B to one this is not the",
            "start": 1455.24,
            "duration": 5.2
        },
        {
            "text": "right solution let me give you a hint",
            "start": 1457.799,
            "duration": 5.201
        },
        {
            "text": "imagine instead of these two variables",
            "start": 1460.44,
            "duration": 5.359
        },
        {
            "text": "we have two buckets the first bucket is",
            "start": 1463,
            "duration": 5.399
        },
        {
            "text": "filled with apples the second bucket is",
            "start": 1465.799,
            "duration": 5.12
        },
        {
            "text": "filled with oranges now if we have these",
            "start": 1468.399,
            "duration": 5.081
        },
        {
            "text": "two buckets in real life how can we swap",
            "start": 1470.919,
            "duration": 5
        },
        {
            "text": "their content think of a solution and",
            "start": 1473.48,
            "duration": 5.439
        },
        {
            "text": "then use that idea to write code to swap",
            "start": 1475.919,
            "duration": 5.041
        },
        {
            "text": "the value of these variables it's not",
            "start": 1478.919,
            "duration": 3.561
        },
        {
            "text": "that difficult just spend a couple",
            "start": 1480.96,
            "duration": 3.24
        },
        {
            "text": "minutes on this and then come back see",
            "start": 1482.48,
            "duration": 3.96
        },
        {
            "text": "my",
            "start": 1484.2,
            "duration": 2.24
        },
        {
            "text": "solution so to solve this problem in",
            "start": 1488.919,
            "duration": 5.401
        },
        {
            "text": "real life we need a third bucket first",
            "start": 1491.36,
            "duration": 5
        },
        {
            "text": "we empty our Apple's bucket into this",
            "start": 1494.32,
            "duration": 5.239
        },
        {
            "text": "bucket now the apples bucket is empty so",
            "start": 1496.36,
            "duration": 5.319
        },
        {
            "text": "we can move the content of the oranges",
            "start": 1499.559,
            "duration": 4.641
        },
        {
            "text": "bucket here now the oranges bucket is",
            "start": 1501.679,
            "duration": 4.961
        },
        {
            "text": "empty so we can move the content of the",
            "start": 1504.2,
            "duration": 5
        },
        {
            "text": "third bucket into this bucket now we",
            "start": 1506.64,
            "duration": 4.759
        },
        {
            "text": "have swapped the content of our buckets",
            "start": 1509.2,
            "duration": 4.64
        },
        {
            "text": "right so let's use this idea to solve",
            "start": 1511.399,
            "duration": 5.4
        },
        {
            "text": "this exercise we declare a third",
            "start": 1513.84,
            "duration": 5.28
        },
        {
            "text": "variable we can call the temp and we",
            "start": 1516.799,
            "duration": 5.281
        },
        {
            "text": "initialize it with what we have in a",
            "start": 1519.12,
            "duration": 5.48
        },
        {
            "text": "that is the value of one now we can set",
            "start": 1522.08,
            "duration": 6
        },
        {
            "text": "a to B so whatever we have in B which is",
            "start": 1524.6,
            "duration": 6.24
        },
        {
            "text": "two two is now going to be in a and",
            "start": 1528.08,
            "duration": 6.04
        },
        {
            "text": "finally we're going to set B to Temp so",
            "start": 1530.84,
            "duration": 6.36
        },
        {
            "text": "B is going to be one so now if we print",
            "start": 1534.12,
            "duration": 6.2
        },
        {
            "text": "a we're going to see two instead of one",
            "start": 1537.2,
            "duration": 5.199
        },
        {
            "text": "let's verify this so let's run our",
            "start": 1540.32,
            "duration": 5.04
        },
        {
            "text": "program there you go beautiful so this",
            "start": 1542.399,
            "duration": 4.88
        },
        {
            "text": "was your first programming problem if",
            "start": 1545.36,
            "duration": 3.64
        },
        {
            "text": "you got stuck don't worry it's",
            "start": 1547.279,
            "duration": 3.76
        },
        {
            "text": "completely normal as we go through the",
            "start": 1549,
            "duration": 3.679
        },
        {
            "text": "course I'm going to give you more and",
            "start": 1551.039,
            "duration": 3.921
        },
        {
            "text": "more exercises to help you build your",
            "start": 1552.679,
            "duration": 4.12
        },
        {
            "text": "confidence next we're going to talk",
            "start": 1554.96,
            "duration": 5.28
        },
        {
            "text": "about constants",
            "start": 1556.799,
            "duration": 3.441
        },
        {
            "text": "there are situations where we don't want",
            "start": 1566.279,
            "duration": 4.201
        },
        {
            "text": "the value of a variable to change this",
            "start": 1568,
            "duration": 4.52
        },
        {
            "text": "is where we use constants here's an",
            "start": 1570.48,
            "duration": 4.76
        },
        {
            "text": "example let's declare a variable of type",
            "start": 1572.52,
            "duration": 6.8
        },
        {
            "text": "double and call it pi and set it to",
            "start": 1575.24,
            "duration": 6.799
        },
        {
            "text": "3.14 now with this we can calculate the",
            "start": 1579.32,
            "duration": 5.56
        },
        {
            "text": "area of a circle right but what if",
            "start": 1582.039,
            "duration": 5.36
        },
        {
            "text": "somewhere in our program I accidentally",
            "start": 1584.88,
            "duration": 5.519
        },
        {
            "text": "set pi to a different value like zero",
            "start": 1587.399,
            "duration": 4.52
        },
        {
            "text": "with this our calculations are going to",
            "start": 1590.399,
            "duration": 3.801
        },
        {
            "text": "go wrong right this is where we can use",
            "start": 1591.919,
            "duration": 5.441
        },
        {
            "text": "a constant to prevent the value of pi",
            "start": 1594.2,
            "duration": 5.4
        },
        {
            "text": "from changing how do we do that very",
            "start": 1597.36,
            "duration": 6.08
        },
        {
            "text": "easy we type the con keyword before",
            "start": 1599.6,
            "duration": 6.92
        },
        {
            "text": "declaring this variable now look on line",
            "start": 1603.44,
            "duration": 5.719
        },
        {
            "text": "five we have a red underline that is a",
            "start": 1606.52,
            "duration": 4.639
        },
        {
            "text": "compilation error so if you hover our",
            "start": 1609.159,
            "duration": 4.081
        },
        {
            "text": "Mouse here we see the error saying",
            "start": 1611.159,
            "duration": 4.801
        },
        {
            "text": "cannot assign to variable Pi with const",
            "start": 1613.24,
            "duration": 6.799
        },
        {
            "text": "qualified type const double and also if",
            "start": 1615.96,
            "duration": 5.64
        },
        {
            "text": "we try to run our",
            "start": 1620.039,
            "duration": 3.76
        },
        {
            "text": "program here in the terminal window we",
            "start": 1621.6,
            "duration": 5.079
        },
        {
            "text": "see an error so take a look this is the",
            "start": 1623.799,
            "duration": 5.641
        },
        {
            "text": "error the error is happening in",
            "start": 1626.679,
            "duration": 6.72
        },
        {
            "text": "main.cpp on line five in column 8 and",
            "start": 1629.44,
            "duration": 6.359
        },
        {
            "text": "here's the actual error cannot assign to",
            "start": 1633.399,
            "duration": 6
        },
        {
            "text": "variable Pi with con qualified type okay",
            "start": 1635.799,
            "duration": 5.88
        },
        {
            "text": "so this will prevent us from",
            "start": 1639.399,
            "duration": 4.681
        },
        {
            "text": "accidentally modify the value of this",
            "start": 1641.679,
            "duration": 7.181
        },
        {
            "text": "variable or more accurately constant",
            "start": 1644.08,
            "duration": 10.56
        },
        {
            "text": "now let's talk about naming conventions",
            "start": 1654.64,
            "duration": 4.2
        },
        {
            "text": "so we have different conventions for",
            "start": 1657,
            "duration": 4.44
        },
        {
            "text": "naming our variables and constants and",
            "start": 1658.84,
            "duration": 4.439
        },
        {
            "text": "different teams prefer different",
            "start": 1661.44,
            "duration": 3.719
        },
        {
            "text": "conventions so there is really no right",
            "start": 1663.279,
            "duration": 3.841
        },
        {
            "text": "or wrong here but let me show you the",
            "start": 1665.159,
            "duration": 4.281
        },
        {
            "text": "popular conventions so earlier we",
            "start": 1667.12,
            "duration": 5.88
        },
        {
            "text": "declared a variable called file size the",
            "start": 1669.44,
            "duration": 6
        },
        {
            "text": "way we name this variable follows what",
            "start": 1673,
            "duration": 5.799
        },
        {
            "text": "we call the snake case so with this",
            "start": 1675.44,
            "duration": 6.04
        },
        {
            "text": "convention we have to use lowercase",
            "start": 1678.799,
            "duration": 4.641
        },
        {
            "text": "letters to name our variables and",
            "start": 1681.48,
            "duration": 4.799
        },
        {
            "text": "constants and if we have multiple words",
            "start": 1683.44,
            "duration": 4.839
        },
        {
            "text": "we should separate them using an",
            "start": 1686.279,
            "duration": 3.961
        },
        {
            "text": "underscore now we have another",
            "start": 1688.279,
            "duration": 4.681
        },
        {
            "text": "convention called hascal case in which",
            "start": 1690.24,
            "duration": 5.36
        },
        {
            "text": "we should capitalize the first letter of",
            "start": 1692.96,
            "duration": 5.68
        },
        {
            "text": "every word so the same variable using",
            "start": 1695.6,
            "duration": 6.799
        },
        {
            "text": "Pascal case looks like this this is",
            "start": 1698.64,
            "duration": 6.32
        },
        {
            "text": "Pascal case and by the way the text that",
            "start": 1702.399,
            "duration": 5
        },
        {
            "text": "I put here that starts with two forward",
            "start": 1704.96,
            "duration": 4.52
        },
        {
            "text": "slashes this is is called a comment",
            "start": 1707.399,
            "duration": 3.76
        },
        {
            "text": "we'll talk about comments later in this",
            "start": 1709.48,
            "duration": 3.88
        },
        {
            "text": "section but for now just remember that",
            "start": 1711.159,
            "duration": 4.681
        },
        {
            "text": "comments are a way to describe our code",
            "start": 1713.36,
            "duration": 5.24
        },
        {
            "text": "they don't get compiled okay now we have",
            "start": 1715.84,
            "duration": 4.959
        },
        {
            "text": "another convention that is similar to",
            "start": 1718.6,
            "duration": 4.76
        },
        {
            "text": "Pascal case the only difference is that",
            "start": 1720.799,
            "duration": 4.441
        },
        {
            "text": "the first letter of the first word",
            "start": 1723.36,
            "duration": 6.84
        },
        {
            "text": "should be lowercase so file size this is",
            "start": 1725.24,
            "duration": 8.08
        },
        {
            "text": "camel case we also have Hungarian",
            "start": 1730.2,
            "duration": 5.24
        },
        {
            "text": "notation which is a pretty old notation",
            "start": 1733.32,
            "duration": 5.079
        },
        {
            "text": "and it's not relevant anymore with hung",
            "start": 1735.44,
            "duration": 5.479
        },
        {
            "text": "notation we should prefix the name of",
            "start": 1738.399,
            "duration": 5.041
        },
        {
            "text": "our variables with a letter that specify",
            "start": 1740.919,
            "duration": 5.161
        },
        {
            "text": "their type so here we have an integer so",
            "start": 1743.44,
            "duration": 6.959
        },
        {
            "text": "we use a lowercase i and then file size",
            "start": 1746.08,
            "duration": 6.76
        },
        {
            "text": "just like Pascal case this is called",
            "start": 1750.399,
            "duration": 4.28
        },
        {
            "text": "Hungarian",
            "start": 1752.84,
            "duration": 4.36
        },
        {
            "text": "notation now quite frankly this is a",
            "start": 1754.679,
            "duration": 4.48
        },
        {
            "text": "very old notation it's not relevant",
            "start": 1757.2,
            "duration": 4.319
        },
        {
            "text": "anymore but I still see people using it",
            "start": 1759.159,
            "duration": 4.36
        },
        {
            "text": "I've seen it a lot in Windows source",
            "start": 1761.519,
            "duration": 3.88
        },
        {
            "text": "code the reason this is not relevant",
            "start": 1763.519,
            "duration": 3.961
        },
        {
            "text": "anymore is because in the old days we",
            "start": 1765.399,
            "duration": 4.88
        },
        {
            "text": "didn't have editors so if we declared a",
            "start": 1767.48,
            "duration": 4.96
        },
        {
            "text": "variable somewhere and we wanted to know",
            "start": 1770.279,
            "duration": 4.4
        },
        {
            "text": "its type we had to scroll up to find the",
            "start": 1772.44,
            "duration": 4.719
        },
        {
            "text": "type of that variable so with Hungarian",
            "start": 1774.679,
            "duration": 4.761
        },
        {
            "text": "notation we could look at a variable and",
            "start": 1777.159,
            "duration": 4.24
        },
        {
            "text": "immediately tell its type but this is",
            "start": 1779.44,
            "duration": 3.959
        },
        {
            "text": "not the case anymore because these days",
            "start": 1781.399,
            "duration": 4
        },
        {
            "text": "we have powerful editors if we simply",
            "start": 1783.399,
            "duration": 5.16
        },
        {
            "text": "hover our Mouse over any",
            "start": 1785.399,
            "duration": 5.88
        },
        {
            "text": "variable we can see it type so here you",
            "start": 1788.559,
            "duration": 5.641
        },
        {
            "text": "can see file size is an integer variable",
            "start": 1791.279,
            "duration": 5.081
        },
        {
            "text": "right so these are the popular",
            "start": 1794.2,
            "duration": 4.28
        },
        {
            "text": "conventions out there in this course I'm",
            "start": 1796.36,
            "duration": 4.159
        },
        {
            "text": "going to use camel case for naming our",
            "start": 1798.48,
            "duration": 5.16
        },
        {
            "text": "variables and constants and Pascal case",
            "start": 1800.519,
            "duration": 5.121
        },
        {
            "text": "for naming our classes we'll talk about",
            "start": 1803.64,
            "duration": 4.32
        },
        {
            "text": "classes later in the course now if you",
            "start": 1805.64,
            "duration": 4
        },
        {
            "text": "don't like these conventions and prefer",
            "start": 1807.96,
            "duration": 4.319
        },
        {
            "text": "to use snake case that's totally fine",
            "start": 1809.64,
            "duration": 4.159
        },
        {
            "text": "but make sure to stick to your own",
            "start": 1812.279,
            "duration": 3.88
        },
        {
            "text": "convention the more consistent your code",
            "start": 1813.799,
            "duration": 4.88
        },
        {
            "text": "is the easier it is to read understand",
            "start": 1816.159,
            "duration": 4.721
        },
        {
            "text": "and maintain it next we're going to talk",
            "start": 1818.679,
            "duration": 6.461
        },
        {
            "text": "about mathematical expressions",
            "start": 1820.88,
            "duration": 10.279
        },
        {
            "text": "so you have learned how to declare",
            "start": 1831.159,
            "duration": 3.801
        },
        {
            "text": "variables and constants now let's see",
            "start": 1832.76,
            "duration": 3.639
        },
        {
            "text": "how we can write mathematical",
            "start": 1834.96,
            "duration": 4.12
        },
        {
            "text": "expressions for performing calculations",
            "start": 1836.399,
            "duration": 4.76
        },
        {
            "text": "this is where the fun begins so I'm",
            "start": 1839.08,
            "duration": 6.8
        },
        {
            "text": "going to declare two variables X and Y",
            "start": 1841.159,
            "duration": 7.281
        },
        {
            "text": "now we can declare a third variable and",
            "start": 1845.88,
            "duration": 6.2
        },
        {
            "text": "set it to x + y so what we have here is",
            "start": 1848.44,
            "duration": 7.359
        },
        {
            "text": "called the addition operator and X and Y",
            "start": 1852.08,
            "duration": 6.88
        },
        {
            "text": "here are called operat so now let's",
            "start": 1855.799,
            "duration": 6.521
        },
        {
            "text": "print Z on the terminal so STD double",
            "start": 1858.96,
            "duration": 8.719
        },
        {
            "text": "Colon c out Z take a look so now we see",
            "start": 1862.32,
            "duration": 8.68
        },
        {
            "text": "13 beautiful we also",
            "start": 1867.679,
            "duration": 6.12
        },
        {
            "text": "have subtraction",
            "start": 1871,
            "duration": 5.88
        },
        {
            "text": "multiplication and division but division",
            "start": 1873.799,
            "duration": 5.441
        },
        {
            "text": "is a little bit tricky in this case",
            "start": 1876.88,
            "duration": 4.799
        },
        {
            "text": "because we're dealing with two integers",
            "start": 1879.24,
            "duration": 4.159
        },
        {
            "text": "the result of the division is going to",
            "start": 1881.679,
            "duration": 4.12
        },
        {
            "text": "be an integer even though in reality",
            "start": 1883.399,
            "duration": 5
        },
        {
            "text": "dividing 10 by 3 is going to result in a",
            "start": 1885.799,
            "duration": 4.401
        },
        {
            "text": "number with a decimal point which we",
            "start": 1888.399,
            "duration": 4.081
        },
        {
            "text": "call a floating Point number in",
            "start": 1890.2,
            "duration": 4.839
        },
        {
            "text": "programming so if you're onun our",
            "start": 1892.48,
            "duration": 5.4
        },
        {
            "text": "program we see three but what if you",
            "start": 1895.039,
            "duration": 5.721
        },
        {
            "text": "want to see a floating Point number well",
            "start": 1897.88,
            "duration": 6.36
        },
        {
            "text": "changing the type of Z to double is not",
            "start": 1900.76,
            "duration": 5.48
        },
        {
            "text": "going to solve this problem because as I",
            "start": 1904.24,
            "duration": 4.76
        },
        {
            "text": "told you earlier if both our numbers are",
            "start": 1906.24,
            "duration": 5
        },
        {
            "text": "integers the result of the division is",
            "start": 1909,
            "duration": 4.679
        },
        {
            "text": "also going to be an integer so to get a",
            "start": 1911.24,
            "duration": 5.12
        },
        {
            "text": "floating Point number we have to convert",
            "start": 1913.679,
            "duration": 4.681
        },
        {
            "text": "one of these numbers to a double",
            "start": 1916.36,
            "duration": 4.96
        },
        {
            "text": "so take a look first the warning goes",
            "start": 1918.36,
            "duration": 5.52
        },
        {
            "text": "away now if you run our program one more",
            "start": 1921.32,
            "duration": 4.88
        },
        {
            "text": "time look we get",
            "start": 1923.88,
            "duration": 6.2
        },
        {
            "text": "3.3333 okay so this is how division",
            "start": 1926.2,
            "duration": 6.88
        },
        {
            "text": "works in C++ now let me revert this back",
            "start": 1930.08,
            "duration": 6.4
        },
        {
            "text": "to integer and integer now we have",
            "start": 1933.08,
            "duration": 6.319
        },
        {
            "text": "another operator called modulus which",
            "start": 1936.48,
            "duration": 5.72
        },
        {
            "text": "Returns the remainder of a division so",
            "start": 1939.399,
            "duration": 4.76
        },
        {
            "text": "what is the remainder of division of 10",
            "start": 1942.2,
            "duration": 6.199
        },
        {
            "text": "by 3 it's one let's verify it there you",
            "start": 1944.159,
            "duration": 7.801
        },
        {
            "text": "go okay now using these operators we can",
            "start": 1948.399,
            "duration": 5.4
        },
        {
            "text": "modify our variables let me show you",
            "start": 1951.96,
            "duration": 4.48
        },
        {
            "text": "what I mean so for Simplicity I'm going",
            "start": 1953.799,
            "duration": 5.72
        },
        {
            "text": "to remove Y and Z we only have X and",
            "start": 1956.44,
            "duration": 5.16
        },
        {
            "text": "we're going to print it on the terminal",
            "start": 1959.519,
            "duration": 4.601
        },
        {
            "text": "let's say we want to increment X by five",
            "start": 1961.6,
            "duration": 7.36
        },
        {
            "text": "here's how we do it we Type X = x + 5 so",
            "start": 1964.12,
            "duration": 7.039
        },
        {
            "text": "first this piece of code or this",
            "start": 1968.96,
            "duration": 4.8
        },
        {
            "text": "expression is going to get evaluated the",
            "start": 1971.159,
            "duration": 5.76
        },
        {
            "text": "result is 15 and then the result will be",
            "start": 1973.76,
            "duration": 6.759
        },
        {
            "text": "stored in in X okay now similarly we can",
            "start": 1976.919,
            "duration": 6.841
        },
        {
            "text": "subtract five from X we can multiply X",
            "start": 1980.519,
            "duration": 6.4
        },
        {
            "text": "by five and so on okay now we also have",
            "start": 1983.76,
            "duration": 4.879
        },
        {
            "text": "two more operators you need to know and",
            "start": 1986.919,
            "duration": 4.201
        },
        {
            "text": "they are increment and decrement",
            "start": 1988.639,
            "duration": 4.801
        },
        {
            "text": "operators so let's say we want to add",
            "start": 1991.12,
            "duration": 7
        },
        {
            "text": "one to X we can say x = x + 1 that is",
            "start": 1993.44,
            "duration": 6.959
        },
        {
            "text": "totally fine but there is a shorter and",
            "start": 1998.12,
            "duration": 4.76
        },
        {
            "text": "more concise way to write this code we",
            "start": 2000.399,
            "duration": 4
        },
        {
            "text": "can say",
            "start": 2002.88,
            "duration": 4.6
        },
        {
            "text": "x++ this is the increment operator we",
            "start": 2004.399,
            "duration": 5.841
        },
        {
            "text": "also have decrement operator but we",
            "start": 2007.48,
            "duration": 4.199
        },
        {
            "text": "don't have the equivalent for",
            "start": 2010.24,
            "duration": 3.84
        },
        {
            "text": "multiplication or division only",
            "start": 2011.679,
            "duration": 5.24
        },
        {
            "text": "increment and decrement okay now this",
            "start": 2014.08,
            "duration": 4.76
        },
        {
            "text": "increment operator there are two ways we",
            "start": 2016.919,
            "duration": 3.961
        },
        {
            "text": "can apply it we can apply it as a",
            "start": 2018.84,
            "duration": 5.76
        },
        {
            "text": "postfix or as a prefix let me show you",
            "start": 2020.88,
            "duration": 6.2
        },
        {
            "text": "the difference so I'm going to delete",
            "start": 2024.6,
            "duration": 4.84
        },
        {
            "text": "these two lines let's declare another",
            "start": 2027.08,
            "duration": 5.719
        },
        {
            "text": "variable called Y and set it to X plus",
            "start": 2029.44,
            "duration": 7.28
        },
        {
            "text": "plus if we apply this as a post fix",
            "start": 2032.799,
            "duration": 6.961
        },
        {
            "text": "first the current value of x which is 10",
            "start": 2036.72,
            "duration": 5.919
        },
        {
            "text": "is going to be assigned to Y so Y is",
            "start": 2039.76,
            "duration": 6
        },
        {
            "text": "going to be 10 and then X will be",
            "start": 2042.639,
            "duration": 5.361
        },
        {
            "text": "incremented by one so if you run our",
            "start": 2045.76,
            "duration": 5.2
        },
        {
            "text": "program X is going to be 11 but Y is",
            "start": 2048,
            "duration": 6.04
        },
        {
            "text": "going to be 10 let me show you so we",
            "start": 2050.96,
            "duration": 7.32
        },
        {
            "text": "print x x is 11 but if you print",
            "start": 2054.04,
            "duration": 7.639
        },
        {
            "text": "y y is going to be 10 okay so let me add",
            "start": 2058.28,
            "duration": 6.119
        },
        {
            "text": "this as a comment for clarity in this",
            "start": 2061.679,
            "duration": 6.521
        },
        {
            "text": "case X is going to be 11 and Y is going",
            "start": 2064.399,
            "duration": 6.881
        },
        {
            "text": "to be 10 now what if we apply the",
            "start": 2068.2,
            "duration": 5.6
        },
        {
            "text": "increment operator as a prefix so we",
            "start": 2071.28,
            "duration": 4.72
        },
        {
            "text": "declare another variable and set it to",
            "start": 2073.8,
            "duration": 6
        },
        {
            "text": "Plus+ X in this case because we applied",
            "start": 2076,
            "duration": 7.119
        },
        {
            "text": "this operator as a prefix first the",
            "start": 2079.8,
            "duration": 5.44
        },
        {
            "text": "value of x is going to be incremented by",
            "start": 2083.119,
            "duration": 5.321
        },
        {
            "text": "one so X is going to be 11 and then the",
            "start": 2085.24,
            "duration": 5.599
        },
        {
            "text": "result will be stored in",
            "start": 2088.44,
            "duration": 6.239
        },
        {
            "text": "Z so in this case both x and z are going",
            "start": 2090.839,
            "duration": 8.721
        },
        {
            "text": "to be 11 let's verify it so if you print",
            "start": 2094.679,
            "duration": 7.92
        },
        {
            "text": "Z well in this case z is 12 I made a",
            "start": 2099.56,
            "duration": 4.559
        },
        {
            "text": "mistake because in the previous",
            "start": 2102.599,
            "duration": 5.161
        },
        {
            "text": "statement we incremented X by one so if",
            "start": 2104.119,
            "duration": 6.161
        },
        {
            "text": "we comment out this line it's not going",
            "start": 2107.76,
            "duration": 5.64
        },
        {
            "text": "to get executed so now when we run our",
            "start": 2110.28,
            "duration": 5.559
        },
        {
            "text": "program X is going to be 11 and Z is",
            "start": 2113.4,
            "duration": 5.08
        },
        {
            "text": "going to be 11 as well let's verify it",
            "start": 2115.839,
            "duration": 6.201
        },
        {
            "text": "so here is z beautiful and let's also",
            "start": 2118.48,
            "duration": 5.8
        },
        {
            "text": "print",
            "start": 2122.04,
            "duration": 6.559
        },
        {
            "text": "X there you go",
            "start": 2124.28,
            "duration": 4.319
        },
        {
            "text": "so here's what you need to take away if",
            "start": 2129,
            "duration": 4.92
        },
        {
            "text": "you apply the increment or decrement",
            "start": 2131.76,
            "duration": 5.319
        },
        {
            "text": "operator as a prefix first this piece of",
            "start": 2133.92,
            "duration": 5.64
        },
        {
            "text": "code is going to get evaluated so first",
            "start": 2137.079,
            "duration": 4.921
        },
        {
            "text": "X is going to be incremented by one and",
            "start": 2139.56,
            "duration": 4.92
        },
        {
            "text": "then the result is going to be stored in",
            "start": 2142,
            "duration": 5.359
        },
        {
            "text": "the other variable in contrast if you",
            "start": 2144.48,
            "duration": 6.119
        },
        {
            "text": "apply this operator as a postfix first",
            "start": 2147.359,
            "duration": 5.401
        },
        {
            "text": "the current value of x which is 10 is",
            "start": 2150.599,
            "duration": 4.841
        },
        {
            "text": "going to be stored in y and then X is",
            "start": 2152.76,
            "duration": 6.8
        },
        {
            "text": "going to be incremented by one",
            "start": 2155.44,
            "duration": 6.24
        },
        {
            "text": "hey guys MOS here I hope you have been",
            "start": 2159.56,
            "duration": 4.16
        },
        {
            "text": "enjoying this tutorial so far I just",
            "start": 2161.68,
            "duration": 3.48
        },
        {
            "text": "wanted to let you know that this",
            "start": 2163.72,
            "duration": 3.76
        },
        {
            "text": "tutorial is the first hour of my",
            "start": 2165.16,
            "duration": 5.08
        },
        {
            "text": "complete C++ Series where you will learn",
            "start": 2167.48,
            "duration": 4.24
        },
        {
            "text": "everything you need to know from the",
            "start": 2170.24,
            "duration": 4
        },
        {
            "text": "basics to more advanced concepts so",
            "start": 2171.72,
            "duration": 4.68
        },
        {
            "text": "watch this tutorial to the end and if",
            "start": 2174.24,
            "duration": 3.92
        },
        {
            "text": "you still want to learn more use the",
            "start": 2176.4,
            "duration": 3.64
        },
        {
            "text": "link below this video to enroll in the",
            "start": 2178.16,
            "duration": 4.48
        },
        {
            "text": "full course the complete course contains",
            "start": 2180.04,
            "duration": 5
        },
        {
            "text": "three parts each part being around 3 to",
            "start": 2182.64,
            "duration": 4.56
        },
        {
            "text": "4 hours long so you can complete them in",
            "start": 2185.04,
            "duration": 4.36
        },
        {
            "text": "a day twoo you will also get a",
            "start": 2187.2,
            "duration": 4.8
        },
        {
            "text": "certificate of completion and a 30-day",
            "start": 2189.4,
            "duration": 4.959
        },
        {
            "text": "money back guarantee again if you're",
            "start": 2192,
            "duration": 4.319
        },
        {
            "text": "interested the link is below this video",
            "start": 2194.359,
            "duration": 4.841
        },
        {
            "text": "in the description",
            "start": 2196.319,
            "duration": 2.881
        },
        {
            "text": "box when writing mathematical",
            "start": 2204.2,
            "duration": 4.36
        },
        {
            "text": "Expressions especially the more complex",
            "start": 2206.359,
            "duration": 4.521
        },
        {
            "text": "ones you need to take into account the",
            "start": 2208.56,
            "duration": 5.519
        },
        {
            "text": "order or priority of operators let me",
            "start": 2210.88,
            "duration": 5.12
        },
        {
            "text": "show you what I mean so I'm going to",
            "start": 2214.079,
            "duration": 4
        },
        {
            "text": "declare a variable called X",
            "start": 2216,
            "duration": 7.119
        },
        {
            "text": "and set it to 1 + 2 * 3 now let's print",
            "start": 2218.079,
            "duration": 7.841
        },
        {
            "text": "X on the console what do you think we're",
            "start": 2223.119,
            "duration": 4.72
        },
        {
            "text": "going to get pause the video and think",
            "start": 2225.92,
            "duration": 4.6
        },
        {
            "text": "about it for a second the answer is",
            "start": 2227.839,
            "duration": 4.801
        },
        {
            "text": "seven this is a very simple math",
            "start": 2230.52,
            "duration": 4.2
        },
        {
            "text": "question but unfortunately a lot of",
            "start": 2232.64,
            "duration": 4.76
        },
        {
            "text": "people get it wrong here's the reason in",
            "start": 2234.72,
            "duration": 5.639
        },
        {
            "text": "math the multiplication and division",
            "start": 2237.4,
            "duration": 4.88
        },
        {
            "text": "operators have a higher order or a",
            "start": 2240.359,
            "duration": 4.72
        },
        {
            "text": "higher priority so when evaluating this",
            "start": 2242.28,
            "duration": 6.28
        },
        {
            "text": "piece of code or this expression first",
            "start": 2245.079,
            "duration": 7.441
        },
        {
            "text": "this part is evaluated so 2 * 3 is six",
            "start": 2248.56,
            "duration": 6.32
        },
        {
            "text": "and then six is added to one so the",
            "start": 2252.52,
            "duration": 4.96
        },
        {
            "text": "result is seven let's verify it so I'm",
            "start": 2254.88,
            "duration": 4.8
        },
        {
            "text": "going to run the program there you go we",
            "start": 2257.48,
            "duration": 4.359
        },
        {
            "text": "have seven okay so here's what I want",
            "start": 2259.68,
            "duration": 4.76
        },
        {
            "text": "you to remember in math or any",
            "start": 2261.839,
            "duration": 3.921
        },
        {
            "text": "programming",
            "start": 2264.44,
            "duration": 4.52
        },
        {
            "text": "languages the multiplication and",
            "start": 2265.76,
            "duration": 5.839
        },
        {
            "text": "division operators always have a higher",
            "start": 2268.96,
            "duration": 6.56
        },
        {
            "text": "priority than addition or subtraction",
            "start": 2271.599,
            "duration": 7.281
        },
        {
            "text": "operators but we can always change the",
            "start": 2275.52,
            "duration": 5.599
        },
        {
            "text": "order of these operators using",
            "start": 2278.88,
            "duration": 6.239
        },
        {
            "text": "parenthesis so in this case if we wrap",
            "start": 2281.119,
            "duration": 6.761
        },
        {
            "text": "this piece of code with parenthesis",
            "start": 2285.119,
            "duration": 5.921
        },
        {
            "text": "first this piece is evaluated so 1 + 2",
            "start": 2287.88,
            "duration": 6.479
        },
        {
            "text": "is three and then three is multiplied by",
            "start": 2291.04,
            "duration": 5.799
        },
        {
            "text": "three so the result is going to be nine",
            "start": 2294.359,
            "duration": 4.841
        },
        {
            "text": "let's verify it so run the program one",
            "start": 2296.839,
            "duration": 5.561
        },
        {
            "text": "more time there you go okay now here's",
            "start": 2299.2,
            "duration": 5.36
        },
        {
            "text": "your exercise for this lesson take this",
            "start": 2302.4,
            "duration": 4.36
        },
        {
            "text": "mathematical expression and implement it",
            "start": 2304.56,
            "duration": 3.6
        },
        {
            "text": "in C++",
            "start": 2306.76,
            "duration": 4.72
        },
        {
            "text": "assume X is 10 and Y is 5 so if you",
            "start": 2308.16,
            "duration": 5.56
        },
        {
            "text": "implement this correctly Z is going to",
            "start": 2311.48,
            "duration": 5.16
        },
        {
            "text": "be 1.3 so pause the video and work on",
            "start": 2313.72,
            "duration": 4.68
        },
        {
            "text": "this for a couple minutes then come back",
            "start": 2316.64,
            "duration": 4.16
        },
        {
            "text": "see my",
            "start": 2318.4,
            "duration": 2.4
        },
        {
            "text": "solution all right here's the solution",
            "start": 2322.48,
            "duration": 5.44
        },
        {
            "text": "I'm going to declare X and set it to 10",
            "start": 2324.72,
            "duration": 7.44
        },
        {
            "text": "then y we set it to five and for Z first",
            "start": 2327.92,
            "duration": 7.64
        },
        {
            "text": "we have to add 10 to X but we have to",
            "start": 2332.16,
            "duration": 5.72
        },
        {
            "text": "wrap this in parenthesis because this",
            "start": 2335.56,
            "duration": 5.24
        },
        {
            "text": "whole thing is going to be our numerator",
            "start": 2337.88,
            "duration": 4.88
        },
        {
            "text": "once we have the numerator then we're",
            "start": 2340.8,
            "duration": 6.16
        },
        {
            "text": "going to divide it by 3 * y but here's",
            "start": 2342.76,
            "duration": 6.599
        },
        {
            "text": "the tricky part we have to wrap this",
            "start": 2346.96,
            "duration": 5.08
        },
        {
            "text": "whole expression in parenthesis because",
            "start": 2349.359,
            "duration": 4.48
        },
        {
            "text": "the result of this expression is going",
            "start": 2352.04,
            "duration": 4.16
        },
        {
            "text": "to be our denominator if you don't use",
            "start": 2353.839,
            "duration": 4.841
        },
        {
            "text": "parenthesis here our denominator is",
            "start": 2356.2,
            "duration": 4.44
        },
        {
            "text": "going to be three and the result is",
            "start": 2358.68,
            "duration": 4.72
        },
        {
            "text": "going to be different so we wrap this",
            "start": 2360.64,
            "duration": 7.439
        },
        {
            "text": "whole thing in parenthesis and now let's",
            "start": 2363.4,
            "duration": 8.16
        },
        {
            "text": "print Z on the terminal so we should get",
            "start": 2368.079,
            "duration": 5.961
        },
        {
            "text": "1.3 again if you didn't solve this",
            "start": 2371.56,
            "duration": 4.279
        },
        {
            "text": "properly don't worry don't let that",
            "start": 2374.04,
            "duration": 3.88
        },
        {
            "text": "discourage you remember you're a student",
            "start": 2375.839,
            "duration": 3.921
        },
        {
            "text": "you're learning if you know everything",
            "start": 2377.92,
            "duration": 3.6
        },
        {
            "text": "and you could solve every problem you",
            "start": 2379.76,
            "duration": 4.28
        },
        {
            "text": "would be the one teaching right so don't",
            "start": 2381.52,
            "duration": 4.2
        },
        {
            "text": "let that discourage you and let's move",
            "start": 2384.04,
            "duration": 4.24
        },
        {
            "text": "on to the next",
            "start": 2385.72,
            "duration": 2.56
        },
        {
            "text": "lesson so you have learned how to write",
            "start": 2394.16,
            "duration": 4.76
        },
        {
            "text": "to the console or The Terminal window in",
            "start": 2396.48,
            "duration": 4.359
        },
        {
            "text": "this lesson I'm going to show you a few",
            "start": 2398.92,
            "duration": 3.6
        },
        {
            "text": "more techniques of writing to the",
            "start": 2400.839,
            "duration": 4.24
        },
        {
            "text": "console so let's start by declaring a",
            "start": 2402.52,
            "duration": 5.44
        },
        {
            "text": "variable now let's say on the terminal",
            "start": 2405.079,
            "duration": 6.24
        },
        {
            "text": "we want to print xal 10 how do we do",
            "start": 2407.96,
            "duration": 6.08
        },
        {
            "text": "this well first we go in the STD",
            "start": 2411.319,
            "duration": 6.161
        },
        {
            "text": "namespace and pick up C out which is an",
            "start": 2414.04,
            "duration": 5.92
        },
        {
            "text": "object that represents the standard",
            "start": 2417.48,
            "duration": 5.119
        },
        {
            "text": "output stream I know it's a mouthful but",
            "start": 2419.96,
            "duration": 4.96
        },
        {
            "text": "let me explain it for you in programming",
            "start": 2422.599,
            "duration": 4.72
        },
        {
            "text": "a stream represents a sequence of C",
            "start": 2424.92,
            "duration": 4.96
        },
        {
            "text": "characters the standard output is our",
            "start": 2427.319,
            "duration": 5.04
        },
        {
            "text": "console or terminal window so using C",
            "start": 2429.88,
            "duration": 4.56
        },
        {
            "text": "out we can write a sequence of",
            "start": 2432.359,
            "duration": 4.041
        },
        {
            "text": "characters on the standard output which",
            "start": 2434.44,
            "duration": 5.08
        },
        {
            "text": "is our console window right now these",
            "start": 2436.4,
            "duration": 5.919
        },
        {
            "text": "double left angle brackets are called",
            "start": 2439.52,
            "duration": 5.839
        },
        {
            "text": "The Stream insertion operator it's an",
            "start": 2442.319,
            "duration": 5.28
        },
        {
            "text": "operator for inserting something to our",
            "start": 2445.359,
            "duration": 4.321
        },
        {
            "text": "output stream in this case we're going",
            "start": 2447.599,
            "duration": 4.52
        },
        {
            "text": "to write a sequence of characters which",
            "start": 2449.68,
            "duration": 5.32
        },
        {
            "text": "we specify using double codes now in",
            "start": 2452.119,
            "duration": 5.881
        },
        {
            "text": "programming or C++ specifically this is",
            "start": 2455,
            "duration": 5.44
        },
        {
            "text": "called a string we'll talk about strings",
            "start": 2458,
            "duration": 4.839
        },
        {
            "text": "later in the course so here I'm going to",
            "start": 2460.44,
            "duration": 5.8
        },
        {
            "text": "print x equals and right after we want",
            "start": 2462.839,
            "duration": 6.961
        },
        {
            "text": "to print the actual value of x so we",
            "start": 2466.24,
            "duration": 6.64
        },
        {
            "text": "terminate this statement and you see out",
            "start": 2469.8,
            "duration": 6.2
        },
        {
            "text": "one more time but this time we print X",
            "start": 2472.88,
            "duration": 5.16
        },
        {
            "text": "okay let's run our program and see what",
            "start": 2476,
            "duration": 7.24
        },
        {
            "text": "we get so we see X is 10 beautiful now",
            "start": 2478.04,
            "duration": 7.4
        },
        {
            "text": "we can combine these statements into a",
            "start": 2483.24,
            "duration": 5.28
        },
        {
            "text": "single statement so we get rid of the",
            "start": 2485.44,
            "duration": 6.52
        },
        {
            "text": "second C out and this semicolon and then",
            "start": 2488.52,
            "duration": 6.319
        },
        {
            "text": "put everything on the same line now we",
            "start": 2491.96,
            "duration": 6.639
        },
        {
            "text": "are changing multiple stream insertion",
            "start": 2494.839,
            "duration": 6.28
        },
        {
            "text": "operators so if we run our program one",
            "start": 2498.599,
            "duration": 5.801
        },
        {
            "text": "more time we get the exact same result",
            "start": 2501.119,
            "duration": 6
        },
        {
            "text": "beautiful now what if we declare a",
            "start": 2504.4,
            "duration": 6
        },
        {
            "text": "second variable so let's declare Y and",
            "start": 2507.119,
            "duration": 6.401
        },
        {
            "text": "set it to 20 and then repeat so one more",
            "start": 2510.4,
            "duration": 8.08
        },
        {
            "text": "time see out y equals and then we add",
            "start": 2513.52,
            "duration": 8.52
        },
        {
            "text": "why take a look all right here's what we",
            "start": 2518.48,
            "duration": 7.119
        },
        {
            "text": "get but wouldn't that be nicer if yals",
            "start": 2522.04,
            "duration": 6.92
        },
        {
            "text": "20 was on the second line well to solve",
            "start": 2525.599,
            "duration": 6.321
        },
        {
            "text": "this problem right here we need to add a",
            "start": 2528.96,
            "duration": 6.52
        },
        {
            "text": "new line so once again we chain the",
            "start": 2531.92,
            "duration": 6.12
        },
        {
            "text": "stream insertion operator and this time",
            "start": 2535.48,
            "duration": 4.96
        },
        {
            "text": "we go in the city name space and pick up",
            "start": 2538.04,
            "duration": 4.92
        },
        {
            "text": "endel which represents the end of the",
            "start": 2540.44,
            "duration": 5.52
        },
        {
            "text": "line okay now let's run our program one",
            "start": 2542.96,
            "duration": 6.8
        },
        {
            "text": "more time that is much better okay now",
            "start": 2545.96,
            "duration": 6.04
        },
        {
            "text": "once again we can simplify this code by",
            "start": 2549.76,
            "duration": 5.4
        },
        {
            "text": "combining these two statements so again",
            "start": 2552,
            "duration": 6.52
        },
        {
            "text": "we don't need the second C out so let's",
            "start": 2555.16,
            "duration": 6.159
        },
        {
            "text": "remove that and this semicolon as well",
            "start": 2558.52,
            "duration": 4.36
        },
        {
            "text": "now if we run our",
            "start": 2561.319,
            "duration": 4.401
        },
        {
            "text": "program we get the exact same result",
            "start": 2562.88,
            "duration": 5.36
        },
        {
            "text": "however our code is not formatted",
            "start": 2565.72,
            "duration": 4.56
        },
        {
            "text": "properly it's a little bit hard to read",
            "start": 2568.24,
            "duration": 4.48
        },
        {
            "text": "this code so here I'm going to use tabs",
            "start": 2570.28,
            "duration": 5.4
        },
        {
            "text": "and spaces to align these operators so",
            "start": 2572.72,
            "duration": 5.08
        },
        {
            "text": "what we have in our code look exactly",
            "start": 2575.68,
            "duration": 4.84
        },
        {
            "text": "like what we expect in the output okay",
            "start": 2577.8,
            "duration": 5.08
        },
        {
            "text": "this is better now there is a tiny",
            "start": 2580.52,
            "duration": 4.88
        },
        {
            "text": "problem in this code we have a bit of",
            "start": 2582.88,
            "duration": 6.12
        },
        {
            "text": "repetition of STD double colons so we",
            "start": 2585.4,
            "duration": 5.8
        },
        {
            "text": "have repeated this in two places let me",
            "start": 2589,
            "duration": 4.599
        },
        {
            "text": "show you how to simplify this code so",
            "start": 2591.2,
            "duration": 5.639
        },
        {
            "text": "before our main function we use the",
            "start": 2593.599,
            "duration": 6.121
        },
        {
            "text": "using directive to pick up the STD name",
            "start": 2596.839,
            "duration": 7.201
        },
        {
            "text": "space so here we type namespace STD now",
            "start": 2599.72,
            "duration": 7.52
        },
        {
            "text": "STD is defined anywhere in this file so",
            "start": 2604.04,
            "duration": 5.16
        },
        {
            "text": "we don't have to repeat it in multiple",
            "start": 2607.24,
            "duration": 4.48
        },
        {
            "text": "places so we can simply access all",
            "start": 2609.2,
            "duration": 5.919
        },
        {
            "text": "objects in the STD namespace so let's",
            "start": 2611.72,
            "duration": 7.56
        },
        {
            "text": "remove that and this one as well and",
            "start": 2615.119,
            "duration": 6
        },
        {
            "text": "finally let's",
            "start": 2619.28,
            "duration": 4.96
        },
        {
            "text": "realign this brackets great so now our",
            "start": 2621.119,
            "duration": 5.44
        },
        {
            "text": "code is cleaner more concise and easier",
            "start": 2624.24,
            "duration": 5.16
        },
        {
            "text": "to read great now here's your exercise",
            "start": 2626.559,
            "duration": 4.921
        },
        {
            "text": "imagine you have a store and you have",
            "start": 2629.4,
            "duration": 3.28
        },
        {
            "text": "made",
            "start": 2631.48,
            "duration": 3.76
        },
        {
            "text": "$95,000 now as part of your tax return",
            "start": 2632.68,
            "duration": 5.6
        },
        {
            "text": "you have to pay state and County tax at",
            "start": 2635.24,
            "duration": 5.76
        },
        {
            "text": "different rates so state tax is 4%",
            "start": 2638.28,
            "duration": 5.44
        },
        {
            "text": "whereas County tax is 2% now I want you",
            "start": 2641,
            "duration": 5.24
        },
        {
            "text": "to write code to show your total sales",
            "start": 2643.72,
            "duration": 4.639
        },
        {
            "text": "as well as your state tax your county",
            "start": 2646.24,
            "duration": 4.4
        },
        {
            "text": "tax and the total tax you have to pay on",
            "start": 2648.359,
            "duration": 4.921
        },
        {
            "text": "this income so pause the video and work",
            "start": 2650.64,
            "duration": 5.08
        },
        {
            "text": "on this exercise for 5 minutes then come",
            "start": 2653.28,
            "duration": 5.039
        },
        {
            "text": "back see my",
            "start": 2655.72,
            "duration": 2.599
        },
        {
            "text": "solution all right here's my solution",
            "start": 2660,
            "duration": 4.88
        },
        {
            "text": "first we need a variable for storing the",
            "start": 2662.52,
            "duration": 4.599
        },
        {
            "text": "total sales and for that I'm going to",
            "start": 2664.88,
            "duration": 4.199
        },
        {
            "text": "use a double so even though we don't",
            "start": 2667.119,
            "duration": 4.121
        },
        {
            "text": "have any scent values here but for",
            "start": 2669.079,
            "duration": 4.04
        },
        {
            "text": "monetary values we should always use a",
            "start": 2671.24,
            "duration": 5.96
        },
        {
            "text": "double so double sales equals",
            "start": 2673.119,
            "duration": 7.561
        },
        {
            "text": "95,000 now right after let's print the",
            "start": 2677.2,
            "duration": 6.56
        },
        {
            "text": "total sales here we add a dollar sign",
            "start": 2680.68,
            "duration": 5.84
        },
        {
            "text": "that's nicer then we chain the insertion",
            "start": 2683.76,
            "duration": 6.4
        },
        {
            "text": "operator to print sales followed by the",
            "start": 2686.52,
            "duration": 6.319
        },
        {
            "text": "end of line now before going any further",
            "start": 2690.16,
            "duration": 4.439
        },
        {
            "text": "let's run our program and make sure",
            "start": 2692.839,
            "duration": 4.961
        },
        {
            "text": "everything works so run",
            "start": 2694.599,
            "duration": 6.081
        },
        {
            "text": "total sales is $95,000",
            "start": 2697.8,
            "duration": 5.519
        },
        {
            "text": "great next we need to calculate the",
            "start": 2700.68,
            "duration": 5.639
        },
        {
            "text": "state tax so let's declare another",
            "start": 2703.319,
            "duration": 6.321
        },
        {
            "text": "variable called state tax and here we",
            "start": 2706.319,
            "duration": 6.961
        },
        {
            "text": "get sales and multiply it by",
            "start": 2709.64,
            "duration": 6.6
        },
        {
            "text": "0.4 and then once again we print this on",
            "start": 2713.28,
            "duration": 5.079
        },
        {
            "text": "the terminal so state",
            "start": 2716.24,
            "duration": 7.2
        },
        {
            "text": "tax is this value followed by the end of",
            "start": 2718.359,
            "duration": 7.521
        },
        {
            "text": "line now once again let's run our",
            "start": 2723.44,
            "duration": 4.28
        },
        {
            "text": "program and make sure everything works",
            "start": 2725.88,
            "duration": 3.8
        },
        {
            "text": "so this is how I want you to write code",
            "start": 2727.72,
            "duration": 4
        },
        {
            "text": "write a bit of code run it make sure",
            "start": 2729.68,
            "duration": 4.28
        },
        {
            "text": "everything works before going further",
            "start": 2731.72,
            "duration": 4.599
        },
        {
            "text": "baby steps so",
            "start": 2733.96,
            "duration": 6.639
        },
        {
            "text": "run so our estate tax is 3,800 great now",
            "start": 2736.319,
            "duration": 6.481
        },
        {
            "text": "let's improve this code the first thing",
            "start": 2740.599,
            "duration": 4.441
        },
        {
            "text": "I want to improve here is formatting so",
            "start": 2742.8,
            "duration": 5.12
        },
        {
            "text": "the first two lines are about the total",
            "start": 2745.04,
            "duration": 5.6
        },
        {
            "text": "sales whereas the second two lines are",
            "start": 2747.92,
            "duration": 5.159
        },
        {
            "text": "about the state tax these are two",
            "start": 2750.64,
            "duration": 5.32
        },
        {
            "text": "different stories right so here I add a",
            "start": 2753.079,
            "duration": 5.601
        },
        {
            "text": "vertical line to separate these stories",
            "start": 2755.96,
            "duration": 4.119
        },
        {
            "text": "just like how we have multiple",
            "start": 2758.68,
            "duration": 3.32
        },
        {
            "text": "paragraphs in an article we want to",
            "start": 2760.079,
            "duration": 4.52
        },
        {
            "text": "write our code so every story is",
            "start": 2762,
            "duration": 5.48
        },
        {
            "text": "separated from other stories okay so",
            "start": 2764.599,
            "duration": 5.96
        },
        {
            "text": "here's our state tax then I add another",
            "start": 2767.48,
            "duration": 4.879
        },
        {
            "text": "vertical line to separate it from the",
            "start": 2770.559,
            "duration": 5.52
        },
        {
            "text": "return statement great now this line is",
            "start": 2772.359,
            "duration": 6.401
        },
        {
            "text": "totally fine but generally speaking it's",
            "start": 2776.079,
            "duration": 5.361
        },
        {
            "text": "best to avoid magic numbers like this",
            "start": 2778.76,
            "duration": 4.68
        },
        {
            "text": "here because even though this is a very",
            "start": 2781.44,
            "duration": 5.04
        },
        {
            "text": "simple example in more complex programs",
            "start": 2783.44,
            "duration": 4.44
        },
        {
            "text": "these mag magic numbers might be",
            "start": 2786.48,
            "duration": 3.76
        },
        {
            "text": "confusing someone else reading your code",
            "start": 2787.88,
            "duration": 5.08
        },
        {
            "text": "may not know what that number represents",
            "start": 2790.24,
            "duration": 4.24
        },
        {
            "text": "so here we can make our code more",
            "start": 2792.96,
            "duration": 4
        },
        {
            "text": "expressive by storing this value in a",
            "start": 2794.48,
            "duration": 6.119
        },
        {
            "text": "separate variable so we declare a",
            "start": 2796.96,
            "duration": 6.84
        },
        {
            "text": "variable called state tax rate and set",
            "start": 2800.599,
            "duration": 4.841
        },
        {
            "text": "it to",
            "start": 2803.8,
            "duration": 3.88
        },
        {
            "text": "0.4 and then we can reference that",
            "start": 2805.44,
            "duration": 4.28
        },
        {
            "text": "variable right",
            "start": 2807.68,
            "duration": 5.639
        },
        {
            "text": "here now it's completely clear what this",
            "start": 2809.72,
            "duration": 6.44
        },
        {
            "text": "value represents it's our state tax rate",
            "start": 2813.319,
            "duration": 5.321
        },
        {
            "text": "but this has another benefit if we use",
            "start": 2816.16,
            "duration": 4.52
        },
        {
            "text": "this variable in multiple places in our",
            "start": 2818.64,
            "duration": 4.08
        },
        {
            "text": "code and then tomorrow this dat tax",
            "start": 2820.68,
            "duration": 4.08
        },
        {
            "text": "changes we don't have to come back and",
            "start": 2822.72,
            "duration": 4.639
        },
        {
            "text": "modify multiple places we have a single",
            "start": 2824.76,
            "duration": 5.319
        },
        {
            "text": "place where we have stored this value",
            "start": 2827.359,
            "duration": 5.2
        },
        {
            "text": "okay now there is a tiny problem in this",
            "start": 2830.079,
            "duration": 6.48
        },
        {
            "text": "code the problem is that I can",
            "start": 2832.559,
            "duration": 7
        },
        {
            "text": "accidentally change theate tax rate how",
            "start": 2836.559,
            "duration": 4.841
        },
        {
            "text": "can we solve this problem using a",
            "start": 2839.559,
            "duration": 5.441
        },
        {
            "text": "constant so we qualify this with the",
            "start": 2841.4,
            "duration": 6.959
        },
        {
            "text": "const keyword that's better now we have",
            "start": 2845,
            "duration": 5.44
        },
        {
            "text": "to repeat the same three lines for our",
            "start": 2848.359,
            "duration": 4.76
        },
        {
            "text": "County tax so I'm going to copy this and",
            "start": 2850.44,
            "duration": 4.72
        },
        {
            "text": "paste it and again note the vertical",
            "start": 2853.119,
            "duration": 5.321
        },
        {
            "text": "line this is to separate these stories",
            "start": 2855.16,
            "duration": 6.32
        },
        {
            "text": "so over here we're going to rename this",
            "start": 2858.44,
            "duration": 8.24
        },
        {
            "text": "to County tax rate which is going to be",
            "start": 2861.48,
            "duration": 9.119
        },
        {
            "text": "2% and over here we going to calculate",
            "start": 2866.68,
            "duration": 5.76
        },
        {
            "text": "the county",
            "start": 2870.599,
            "duration": 4.841
        },
        {
            "text": "tax and print it",
            "start": 2872.44,
            "duration": 7.36
        },
        {
            "text": "accordingly County tax good nothing new",
            "start": 2875.44,
            "duration": 6.399
        },
        {
            "text": "and we should also replace state tax",
            "start": 2879.8,
            "duration": 5.72
        },
        {
            "text": "rate with County tax rate so let me show",
            "start": 2881.839,
            "duration": 6.161
        },
        {
            "text": "you a shortcut here look I haven't typed",
            "start": 2885.52,
            "duration": 5.52
        },
        {
            "text": "County tax rate I just typed kind of an",
            "start": 2888,
            "duration": 7.16
        },
        {
            "text": "abbreviation so count TR so we can use",
            "start": 2891.04,
            "duration": 6.559
        },
        {
            "text": "abbreviations to quickly type our code",
            "start": 2895.16,
            "duration": 6.08
        },
        {
            "text": "and press enter to complete it okay now",
            "start": 2897.599,
            "duration": 5.201
        },
        {
            "text": "let's run our program and make sure",
            "start": 2901.24,
            "duration": 3.56
        },
        {
            "text": "everything",
            "start": 2902.8,
            "duration": 5.279
        },
        {
            "text": "works so our County tax is 1900",
            "start": 2904.8,
            "duration": 6.88
        },
        {
            "text": "beautiful now the final part we declare",
            "start": 2908.079,
            "duration": 7.28
        },
        {
            "text": "another variable called total tax which",
            "start": 2911.68,
            "duration": 9
        },
        {
            "text": "equals State Tax Plus County tax and",
            "start": 2915.359,
            "duration": 8.76
        },
        {
            "text": "finally we print it on the",
            "start": 2920.68,
            "duration": 7.84
        },
        {
            "text": "terminal total tax okay so once again",
            "start": 2924.119,
            "duration": 6.521
        },
        {
            "text": "see how I've named my variables all the",
            "start": 2928.52,
            "duration": 4.079
        },
        {
            "text": "variables are properly named they're",
            "start": 2930.64,
            "duration": 4.479
        },
        {
            "text": "meaningful there is no ambiguity in this",
            "start": 2932.599,
            "duration": 6.601
        },
        {
            "text": "code we don't have t 1 T2 TR whatever",
            "start": 2935.119,
            "duration": 6.161
        },
        {
            "text": "don't write code like that next we're",
            "start": 2939.2,
            "duration": 3.72
        },
        {
            "text": "going to talk about reading input from",
            "start": 2941.28,
            "duration": 3.799
        },
        {
            "text": "the",
            "start": 2942.92,
            "duration": 2.159
        },
        {
            "text": "user all right now let's see how we can",
            "start": 2951,
            "duration": 4.68
        },
        {
            "text": "read input from the console so you have",
            "start": 2953.2,
            "duration": 5.28
        },
        {
            "text": "learned that c out represents the",
            "start": 2955.68,
            "duration": 5.879
        },
        {
            "text": "standard output string now in this file",
            "start": 2958.48,
            "duration": 5.72
        },
        {
            "text": "in iio stream we have another object",
            "start": 2961.559,
            "duration": 5.321
        },
        {
            "text": "called cin which represents the the",
            "start": 2964.2,
            "duration": 4.599
        },
        {
            "text": "standard input stream which we can use",
            "start": 2966.88,
            "duration": 4.16
        },
        {
            "text": "for reading data from the console let me",
            "start": 2968.799,
            "duration": 4.32
        },
        {
            "text": "show you how first we're going to use C",
            "start": 2971.04,
            "duration": 5.24
        },
        {
            "text": "out to print a label on the screen so",
            "start": 2973.119,
            "duration": 4.72
        },
        {
            "text": "enter a",
            "start": 2976.28,
            "duration": 4.68
        },
        {
            "text": "value now using C in we can read that",
            "start": 2977.839,
            "duration": 5.48
        },
        {
            "text": "value and put it in a variable but first",
            "start": 2980.96,
            "duration": 4.92
        },
        {
            "text": "we need to declare a variable so let's",
            "start": 2983.319,
            "duration": 5.841
        },
        {
            "text": "declare an integer called value then we",
            "start": 2985.88,
            "duration": 6.04
        },
        {
            "text": "use C in along with the stream",
            "start": 2989.16,
            "duration": 6
        },
        {
            "text": "extraction operator to read that value",
            "start": 2991.92,
            "duration": 6.679
        },
        {
            "text": "and put it in this variable able okay so",
            "start": 2995.16,
            "duration": 6
        },
        {
            "text": "this is called the stream extraction",
            "start": 2998.599,
            "duration": 5.361
        },
        {
            "text": "operator it's the opposite of stream",
            "start": 3001.16,
            "duration": 4.919
        },
        {
            "text": "insertion operator I know it can be",
            "start": 3003.96,
            "duration": 4.04
        },
        {
            "text": "confusing but the easiest way to",
            "start": 3006.079,
            "duration": 3.841
        },
        {
            "text": "remember this is to think of the",
            "start": 3008,
            "duration": 4.48
        },
        {
            "text": "direction of data flow so in this case",
            "start": 3009.92,
            "duration": 5.36
        },
        {
            "text": "we have reading data from the console or",
            "start": 3012.48,
            "duration": 5.56
        },
        {
            "text": "the standard input and putting it into",
            "start": 3015.28,
            "duration": 6.12
        },
        {
            "text": "this variable in contrast with see out",
            "start": 3018.04,
            "duration": 4.88
        },
        {
            "text": "you're basically getting this sequence",
            "start": 3021.4,
            "duration": 4.679
        },
        {
            "text": "of characters and putting them into the",
            "start": 3022.92,
            "duration": 5.48
        },
        {
            "text": "console so this is the way to remember",
            "start": 3026.079,
            "duration": 6.121
        },
        {
            "text": "this okay now to verify that our program",
            "start": 3028.4,
            "duration": 7.08
        },
        {
            "text": "works let's print the value that we just",
            "start": 3032.2,
            "duration": 5.96
        },
        {
            "text": "read so let's run our",
            "start": 3035.48,
            "duration": 6.319
        },
        {
            "text": "program enter value let's say 10 and we",
            "start": 3038.16,
            "duration": 6.32
        },
        {
            "text": "get 10 in the output beautiful now what",
            "start": 3041.799,
            "duration": 4.921
        },
        {
            "text": "if we enter a floating Point number a",
            "start": 3044.48,
            "duration": 5.76
        },
        {
            "text": "number with a decimal point let's see so",
            "start": 3046.72,
            "duration": 6.2
        },
        {
            "text": "this time I'm going to enter",
            "start": 3050.24,
            "duration": 5.8
        },
        {
            "text": "10.1 the decimal part is gone because we",
            "start": 3052.92,
            "duration": 6.159
        },
        {
            "text": "declared this value as an integer so if",
            "start": 3056.04,
            "duration": 5.88
        },
        {
            "text": "you want to read a floating Point number",
            "start": 3059.079,
            "duration": 5.361
        },
        {
            "text": "here we have to use a double type take a",
            "start": 3061.92,
            "duration": 6.84
        },
        {
            "text": "look so one more time 10.5 now we get",
            "start": 3064.44,
            "duration": 7.76
        },
        {
            "text": "10.5 beautiful now we can also read",
            "start": 3068.76,
            "duration": 6.64
        },
        {
            "text": "multiple values so let's change this",
            "start": 3072.2,
            "duration": 9.44
        },
        {
            "text": "label to enter values for X and Y now",
            "start": 3075.4,
            "duration": 9.159
        },
        {
            "text": "let's declare two variables called X and",
            "start": 3081.64,
            "duration": 5.439
        },
        {
            "text": "Y first we read X",
            "start": 3084.559,
            "duration": 5.681
        },
        {
            "text": "and then we read Y and finally we can",
            "start": 3087.079,
            "duration": 6.601
        },
        {
            "text": "print x + y this is like a simple",
            "start": 3090.24,
            "duration": 7.24
        },
        {
            "text": "calculator so take a look we can enter",
            "start": 3093.68,
            "duration": 7.96
        },
        {
            "text": "10 and 20 and the result is 30 now we",
            "start": 3097.48,
            "duration": 6.2
        },
        {
            "text": "can also separate these numbers using a",
            "start": 3101.64,
            "duration": 4.08
        },
        {
            "text": "space and the program will still work",
            "start": 3103.68,
            "duration": 6.119
        },
        {
            "text": "take a look so one more time 10 space it",
            "start": 3105.72,
            "duration": 7.119
        },
        {
            "text": "doesn't matter one or more spaces we add",
            "start": 3109.799,
            "duration": 5.28
        },
        {
            "text": "the second number and we get the same",
            "start": 3112.839,
            "duration": 5.601
        },
        {
            "text": "result okay now similar to see out here",
            "start": 3115.079,
            "duration": 6.081
        },
        {
            "text": "we can chain these statements together",
            "start": 3118.44,
            "duration": 4.6
        },
        {
            "text": "so we can get rid of the second",
            "start": 3121.16,
            "duration": 4.8
        },
        {
            "text": "statement and chain the stream",
            "start": 3123.04,
            "duration": 5.36
        },
        {
            "text": "extraction operator to read the second",
            "start": 3125.96,
            "duration": 6.399
        },
        {
            "text": "value so look we start from the console",
            "start": 3128.4,
            "duration": 6
        },
        {
            "text": "we read something and put it in X then",
            "start": 3132.359,
            "duration": 4.801
        },
        {
            "text": "we read something else and put it in y",
            "start": 3134.4,
            "duration": 4.8
        },
        {
            "text": "it's exactly like before but our code is",
            "start": 3137.16,
            "duration": 4.72
        },
        {
            "text": "shorter so this is how we can read input",
            "start": 3139.2,
            "duration": 5.48
        },
        {
            "text": "from the console now as your exercise I",
            "start": 3141.88,
            "duration": 4.64
        },
        {
            "text": "want you to write a program for con",
            "start": 3144.68,
            "duration": 4.08
        },
        {
            "text": "converting temperatures from Fahrenheit",
            "start": 3146.52,
            "duration": 5
        },
        {
            "text": "to Celsius so when you run your program",
            "start": 3148.76,
            "duration": 4.92
        },
        {
            "text": "the program should ask the user to enter",
            "start": 3151.52,
            "duration": 4.279
        },
        {
            "text": "a temperature in fahrenheit and then it",
            "start": 3153.68,
            "duration": 4
        },
        {
            "text": "should convert it to Celsius and print",
            "start": 3155.799,
            "duration": 4.241
        },
        {
            "text": "it on a terminal so pause the video and",
            "start": 3157.68,
            "duration": 4.08
        },
        {
            "text": "spend a few minutes on this then come",
            "start": 3160.04,
            "duration": 4.24
        },
        {
            "text": "back see my",
            "start": 3161.76,
            "duration": 2.52
        },
        {
            "text": "solution all right here's the solution",
            "start": 3165.839,
            "duration": 4.641
        },
        {
            "text": "it's pretty easy first we use see out to",
            "start": 3167.839,
            "duration": 5.561
        },
        {
            "text": "print a label like",
            "start": 3170.48,
            "duration": 6.04
        },
        {
            "text": "Fahrenheit then we declare a variable",
            "start": 3173.4,
            "duration": 4.679
        },
        {
            "text": "for storing the temperature in",
            "start": 3176.52,
            "duration": 3.319
        },
        {
            "text": "fahrenheit",
            "start": 3178.079,
            "duration": 4.76
        },
        {
            "text": "Fahrenheit next using C in we read that",
            "start": 3179.839,
            "duration": 4.841
        },
        {
            "text": "value and put it in this",
            "start": 3182.839,
            "duration": 4.801
        },
        {
            "text": "variable then we declare a variable of",
            "start": 3184.68,
            "duration": 6.08
        },
        {
            "text": "type double called Celsius the reason",
            "start": 3187.64,
            "duration": 5
        },
        {
            "text": "I'm using a double here is because the",
            "start": 3190.76,
            "duration": 4.079
        },
        {
            "text": "conversion might result in a floating",
            "start": 3192.64,
            "duration": 5.439
        },
        {
            "text": "Point number so here's the formula",
            "start": 3194.839,
            "duration": 7.401
        },
        {
            "text": "Fahrenheit minus 32 we wrap this in",
            "start": 3198.079,
            "duration": 7.04
        },
        {
            "text": "parenthesis and then divide it by",
            "start": 3202.24,
            "duration": 6.76
        },
        {
            "text": "1.8 the finally using C out we print the",
            "start": 3205.119,
            "duration": 6.881
        },
        {
            "text": "temperature in celsius now let's test",
            "start": 3209,
            "duration": 6.44
        },
        {
            "text": "our program so 90 in Fahrenheit is",
            "start": 3212,
            "duration": 7.96
        },
        {
            "text": "equivalent to 32.2 in",
            "start": 3215.44,
            "duration": 4.52
        },
        {
            "text": "Celsius so you have seen that the",
            "start": 3226.04,
            "duration": 4.44
        },
        {
            "text": "standard Library gives us the capability",
            "start": 3228.119,
            "duration": 5.081
        },
        {
            "text": "to read from or write to the console now",
            "start": 3230.48,
            "duration": 4.28
        },
        {
            "text": "in this lesson we're going to look at a",
            "start": 3233.2,
            "duration": 3.599
        },
        {
            "text": "different part of the standard Library",
            "start": 3234.76,
            "duration": 4.12
        },
        {
            "text": "that gives us several useful",
            "start": 3236.799,
            "duration": 5.161
        },
        {
            "text": "mathematical functions so on the top",
            "start": 3238.88,
            "duration": 4.64
        },
        {
            "text": "we're going to use the include directive",
            "start": 3241.96,
            "duration": 4.72
        },
        {
            "text": "one more time to include a file called C",
            "start": 3243.52,
            "duration": 5.64
        },
        {
            "text": "maath this file declares a bunch of",
            "start": 3246.68,
            "duration": 4.879
        },
        {
            "text": "useful mathematical functions now if",
            "start": 3249.16,
            "duration": 4.439
        },
        {
            "text": "you're curious what these functions are",
            "start": 3251.559,
            "duration": 5.081
        },
        {
            "text": "just go to Google and search for cmath",
            "start": 3253.599,
            "duration": 4.641
        },
        {
            "text": "reference there are many different",
            "start": 3256.64,
            "duration": 4.76
        },
        {
            "text": "websites that give you a C++ reference",
            "start": 3258.24,
            "duration": 6.8
        },
        {
            "text": "one of them is C+ plus.com the other is",
            "start": 3261.4,
            "duration": 6.8
        },
        {
            "text": "CPP reference.com and so on so as an",
            "start": 3265.04,
            "duration": 5.519
        },
        {
            "text": "example let's look at this",
            "start": 3268.2,
            "duration": 4.76
        },
        {
            "text": "page so over here you can see all the",
            "start": 3270.559,
            "duration": 6.201
        },
        {
            "text": "functions declared in the cmath library",
            "start": 3272.96,
            "duration": 5.159
        },
        {
            "text": "in this lesson we're going to look at a",
            "start": 3276.76,
            "duration": 3.68
        },
        {
            "text": "couple of them one of them is Seal which",
            "start": 3278.119,
            "duration": 4.801
        },
        {
            "text": "rounds up a value the other is floor",
            "start": 3280.44,
            "duration": 4.56
        },
        {
            "text": "which rounds down a value now if you",
            "start": 3282.92,
            "duration": 4.399
        },
        {
            "text": "click on any of these functions you can",
            "start": 3285,
            "duration": 5.04
        },
        {
            "text": "learn more about it so on the top you",
            "start": 3287.319,
            "duration": 6.121
        },
        {
            "text": "can see different versions of c and C++",
            "start": 3290.04,
            "duration": 7.039
        },
        {
            "text": "so C90 and c99 represents the old C",
            "start": 3293.44,
            "duration": 7.28
        },
        {
            "text": "language C++ 98 is one of the early",
            "start": 3297.079,
            "duration": 7.121
        },
        {
            "text": "versions of C++ that came in year",
            "start": 3300.72,
            "duration": 6.72
        },
        {
            "text": "1998 then we have C++ 11 that was",
            "start": 3304.2,
            "duration": 6.52
        },
        {
            "text": "released in year 2011 so you can see how",
            "start": 3307.44,
            "duration": 6.96
        },
        {
            "text": "this function has evolved over different",
            "start": 3310.72,
            "duration": 6.639
        },
        {
            "text": "versions of C or C++ now don't get hung",
            "start": 3314.4,
            "duration": 4.959
        },
        {
            "text": "up too much about these details all I",
            "start": 3317.359,
            "duration": 3.641
        },
        {
            "text": "want you to pay attention to here is",
            "start": 3319.359,
            "duration": 5.121
        },
        {
            "text": "that this function takes an input of",
            "start": 3321,
            "duration": 5.88
        },
        {
            "text": "type double and returns",
            "start": 3324.48,
            "duration": 4.319
        },
        {
            "text": "another double so let's see this in",
            "start": 3326.88,
            "duration": 5.12
        },
        {
            "text": "action so back to the code here in the",
            "start": 3328.799,
            "duration": 5.921
        },
        {
            "text": "main function to use the floor function",
            "start": 3332,
            "duration": 5.039
        },
        {
            "text": "we type floor followed by a pair of",
            "start": 3334.72,
            "duration": 5.119
        },
        {
            "text": "parentheses and then we Supply the input",
            "start": 3337.039,
            "duration": 5.8
        },
        {
            "text": "value which is called an argument so we",
            "start": 3339.839,
            "duration": 6.601
        },
        {
            "text": "pass 1.2 now we get a double value that",
            "start": 3342.839,
            "duration": 6.081
        },
        {
            "text": "we can store in a variable so let's",
            "start": 3346.44,
            "duration": 5.8
        },
        {
            "text": "declare a variable of type double called",
            "start": 3348.92,
            "duration": 6.72
        },
        {
            "text": "result and set it to the return value of",
            "start": 3352.24,
            "duration": 5.359
        },
        {
            "text": "the floor fun function and then we",
            "start": 3355.64,
            "duration": 3.679
        },
        {
            "text": "terminate this statement with a",
            "start": 3357.599,
            "duration": 4.72
        },
        {
            "text": "semicolon now over here we say that we",
            "start": 3359.319,
            "duration": 5.321
        },
        {
            "text": "are calling the floor function which",
            "start": 3362.319,
            "duration": 4.8
        },
        {
            "text": "means we're executing it we giving it a",
            "start": 3364.64,
            "duration": 5.88
        },
        {
            "text": "value and getting a new value now we can",
            "start": 3367.119,
            "duration": 7.081
        },
        {
            "text": "print the result just like before and",
            "start": 3370.52,
            "duration": 6.76
        },
        {
            "text": "the result is one okay now some",
            "start": 3374.2,
            "duration": 5.639
        },
        {
            "text": "functions take multiple values or",
            "start": 3377.28,
            "duration": 4.799
        },
        {
            "text": "multiple arguments one of them is the",
            "start": 3379.839,
            "duration": 5.601
        },
        {
            "text": "power or power function so let's take a",
            "start": 3382.079,
            "duration": 4.76
        },
        {
            "text": "look",
            "start": 3385.44,
            "duration": 4.24
        },
        {
            "text": "po requires two arguments here we need",
            "start": 3386.839,
            "duration": 5.801
        },
        {
            "text": "to pass two values separated by comma so",
            "start": 3389.68,
            "duration": 6.399
        },
        {
            "text": "if we say 2 comma 3 that means 2 to the",
            "start": 3392.64,
            "duration": 6.6
        },
        {
            "text": "power of three now when we type this C",
            "start": 3396.079,
            "duration": 6.921
        },
        {
            "text": "lion adds these labels lcpp underline X",
            "start": 3399.24,
            "duration": 7.16
        },
        {
            "text": "and lcpp underline y these are the name",
            "start": 3403,
            "duration": 6.68
        },
        {
            "text": "of the parameters of this function so C",
            "start": 3406.4,
            "duration": 5.28
        },
        {
            "text": "lion adds this to make our code a bit",
            "start": 3409.68,
            "duration": 5.08
        },
        {
            "text": "more understandable okay now if we run",
            "start": 3411.68,
            "duration": 7.04
        },
        {
            "text": "this we get eight okay now as an",
            "start": 3414.76,
            "duration": 6.4
        },
        {
            "text": "exercise I want you to write a program",
            "start": 3418.72,
            "duration": 4.879
        },
        {
            "text": "that asks the user to enter the radius",
            "start": 3421.16,
            "duration": 4.879
        },
        {
            "text": "of a circle and then it should print the",
            "start": 3423.599,
            "duration": 4.681
        },
        {
            "text": "area of a circle it's pretty easy you",
            "start": 3426.039,
            "duration": 5.52
        },
        {
            "text": "can knock it out in a couple of",
            "start": 3428.28,
            "duration": 3.279
        },
        {
            "text": "minutes all right here's my solution",
            "start": 3433.079,
            "duration": 5.081
        },
        {
            "text": "first we use see out to print a",
            "start": 3435.799,
            "duration": 6.52
        },
        {
            "text": "label into radius then we declare a",
            "start": 3438.16,
            "duration": 7.36
        },
        {
            "text": "double variable called radius next we",
            "start": 3442.319,
            "duration": 4.401
        },
        {
            "text": "you see in",
            "start": 3445.52,
            "duration": 4.2
        },
        {
            "text": "to read the value the user enters into",
            "start": 3446.72,
            "duration": 3.76
        },
        {
            "text": "this",
            "start": 3449.72,
            "duration": 3.319
        },
        {
            "text": "variable now we declare another variable",
            "start": 3450.48,
            "duration": 5.2
        },
        {
            "text": "called area and here we have to use the",
            "start": 3453.039,
            "duration": 7.241
        },
        {
            "text": "old formula pi * R to ^ of 2 so we can",
            "start": 3455.68,
            "duration": 7.48
        },
        {
            "text": "type the pi number here but earlier I",
            "start": 3460.28,
            "duration": 4.519
        },
        {
            "text": "told you that we should avoid magic",
            "start": 3463.16,
            "duration": 4.36
        },
        {
            "text": "numbers as much as possible so we're",
            "start": 3464.799,
            "duration": 5.121
        },
        {
            "text": "going to store this value Pi in a",
            "start": 3467.52,
            "duration": 3.519
        },
        {
            "text": "separate",
            "start": 3469.92,
            "duration": 3.84
        },
        {
            "text": "variable or even better we can make this",
            "start": 3471.039,
            "duration": 7.32
        },
        {
            "text": "a constant okay now can say area equals",
            "start": 3473.76,
            "duration": 7.4
        },
        {
            "text": "Pi * this is where we use the power",
            "start": 3478.359,
            "duration": 5.881
        },
        {
            "text": "function to get radius to the power of",
            "start": 3481.16,
            "duration": 6.36
        },
        {
            "text": "two as simple as that now finally we use",
            "start": 3484.24,
            "duration": 6.319
        },
        {
            "text": "see out to print the area Let's test our",
            "start": 3487.52,
            "duration": 5.24
        },
        {
            "text": "program so if we",
            "start": 3490.559,
            "duration": 6.8
        },
        {
            "text": "enter 4 the area is",
            "start": 3492.76,
            "duration": 4.599
        },
        {
            "text": "5024 all right the last we're going to",
            "start": 3504.52,
            "duration": 4.68
        },
        {
            "text": "cover in this section is comments we use",
            "start": 3506.48,
            "duration": 5.28
        },
        {
            "text": "comments to clarify our code and to make",
            "start": 3509.2,
            "duration": 5
        },
        {
            "text": "it easier to understand as I told you",
            "start": 3511.76,
            "duration": 5.68
        },
        {
            "text": "before comments don't get compiled now",
            "start": 3514.2,
            "duration": 5.44
        },
        {
            "text": "in C++ we have a couple of different",
            "start": 3517.44,
            "duration": 4.48
        },
        {
            "text": "ways for writing comments we can start",
            "start": 3519.64,
            "duration": 5.32
        },
        {
            "text": "with two forward slashes and whatever we",
            "start": 3521.92,
            "duration": 5.08
        },
        {
            "text": "type in front of these slashes will be",
            "start": 3524.96,
            "duration": 4.72
        },
        {
            "text": "considered a comment now we can add the",
            "start": 3527,
            "duration": 6.4
        },
        {
            "text": "slashes above a line or in front of it",
            "start": 3529.68,
            "duration": 6.48
        },
        {
            "text": "either way works but as you can see here",
            "start": 3533.4,
            "duration": 5.04
        },
        {
            "text": "we have limited space because we're",
            "start": 3536.16,
            "duration": 4.879
        },
        {
            "text": "basically bound to what is left here of",
            "start": 3538.44,
            "duration": 5.24
        },
        {
            "text": "course we can write a longer comment but",
            "start": 3541.039,
            "duration": 4.361
        },
        {
            "text": "then we'll have to constantly scroll to",
            "start": 3543.68,
            "duration": 3.52
        },
        {
            "text": "the left and to the right to see what is",
            "start": 3545.4,
            "duration": 4.159
        },
        {
            "text": "going on so it's more conventional to",
            "start": 3547.2,
            "duration": 4.919
        },
        {
            "text": "write the comment above a line now if",
            "start": 3549.559,
            "duration": 4.641
        },
        {
            "text": "you want to have multiple lines again we",
            "start": 3552.119,
            "duration": 4.601
        },
        {
            "text": "can start a new line of comment like",
            "start": 3554.2,
            "duration": 5.72
        },
        {
            "text": "this okay now in C++ we have another way",
            "start": 3556.72,
            "duration": 6.2
        },
        {
            "text": "for writing a multi-line comment instead",
            "start": 3559.92,
            "duration": 5.6
        },
        {
            "text": "of two forward slashes we start with a",
            "start": 3562.92,
            "duration": 3.8
        },
        {
            "text": "forward slash",
            "start": 3565.52,
            "duration": 4.76
        },
        {
            "text": "and an asterisk and then press enter now",
            "start": 3566.72,
            "duration": 6
        },
        {
            "text": "cine automatically generates this block",
            "start": 3570.28,
            "duration": 4.759
        },
        {
            "text": "of comment these two characters",
            "start": 3572.72,
            "duration": 5
        },
        {
            "text": "represent the beginning of the block and",
            "start": 3575.039,
            "duration": 4.76
        },
        {
            "text": "these two characters represent the end",
            "start": 3577.72,
            "duration": 4.24
        },
        {
            "text": "of the comment block what we put in",
            "start": 3579.799,
            "duration": 4.52
        },
        {
            "text": "between will be considered a multi-line",
            "start": 3581.96,
            "duration": 4.399
        },
        {
            "text": "comment now different teams have",
            "start": 3584.319,
            "duration": 3.841
        },
        {
            "text": "different preferences in terms of which",
            "start": 3586.359,
            "duration": 3.841
        },
        {
            "text": "style of comments should be used so",
            "start": 3588.16,
            "duration": 3.879
        },
        {
            "text": "there is really no right or wrong here",
            "start": 3590.2,
            "duration": 4.2
        },
        {
            "text": "just pick one style and stick to it now",
            "start": 3592.039,
            "duration": 4
        },
        {
            "text": "one thing I want to emphasize about",
            "start": 3594.4,
            "duration": 3.76
        },
        {
            "text": "comments is that you should not overuse",
            "start": 3596.039,
            "duration": 4.04
        },
        {
            "text": "them because they make your code harder",
            "start": 3598.16,
            "duration": 4.28
        },
        {
            "text": "to understand and maintain so you should",
            "start": 3600.079,
            "duration": 5.641
        },
        {
            "text": "use comments only to explain wise and",
            "start": 3602.44,
            "duration": 6.119
        },
        {
            "text": "how not what let me show you what I mean",
            "start": 3605.72,
            "duration": 5.52
        },
        {
            "text": "so here I can write a comment and say",
            "start": 3608.559,
            "duration": 6.48
        },
        {
            "text": "declare a variable and initialize it to",
            "start": 3611.24,
            "duration": 6.64
        },
        {
            "text": "zero well it is obvious that that's what",
            "start": 3615.039,
            "duration": 4.961
        },
        {
            "text": "we're doing on the next line so this",
            "start": 3617.88,
            "duration": 4.8
        },
        {
            "text": "comment is completely unnecessary and",
            "start": 3620,
            "duration": 4.039
        },
        {
            "text": "it's making our code a little bit",
            "start": 3622.68,
            "duration": 3.399
        },
        {
            "text": "verbose we don't want to sprinkle our",
            "start": 3624.039,
            "duration": 4.641
        },
        {
            "text": "code with all these kinds of unnecessary",
            "start": 3626.079,
            "duration": 4.841
        },
        {
            "text": "comments instead we should use comments",
            "start": 3628.68,
            "duration": 5.04
        },
        {
            "text": "to explain wise and how's if you made",
            "start": 3630.92,
            "duration": 4.76
        },
        {
            "text": "certain assumptions while writing this",
            "start": 3633.72,
            "duration": 4.24
        },
        {
            "text": "code we should comment those assumptions",
            "start": 3635.68,
            "duration": 4.2
        },
        {
            "text": "so in the future when we come back we",
            "start": 3637.96,
            "duration": 4.68
        },
        {
            "text": "see why we did things in a certain way",
            "start": 3639.88,
            "duration": 5.84
        },
        {
            "text": "okay so that's all about comments and",
            "start": 3642.64,
            "duration": 4.159
        },
        {
            "text": "that brings us to the end of this",
            "start": 3645.72,
            "duration": 4.76
        },
        {
            "text": "section so I will see you in the next",
            "start": 3646.799,
            "duration": 3.681
        },
        {
            "text": "section welcome back to the ultimate C++",
            "start": 3652.599,
            "duration": 4.841
        },
        {
            "text": "course in this section we're going to",
            "start": 3655.559,
            "duration": 4.201
        },
        {
            "text": "explore the fundamental data types in",
            "start": 3657.44,
            "duration": 5.48
        },
        {
            "text": "C++ in detail we'll talk about various",
            "start": 3659.76,
            "duration": 5.279
        },
        {
            "text": "built-in types as well as their size and",
            "start": 3662.92,
            "duration": 4.56
        },
        {
            "text": "limits more specifically we'll explore",
            "start": 3665.039,
            "duration": 4.441
        },
        {
            "text": "various types for representing numbers",
            "start": 3667.48,
            "duration": 3.92
        },
        {
            "text": "and their differences you will learn how",
            "start": 3669.48,
            "duration": 4.04
        },
        {
            "text": "to generate random numbers which is a",
            "start": 3671.4,
            "duration": 3.959
        },
        {
            "text": "very useful technique especially for",
            "start": 3673.52,
            "duration": 4.039
        },
        {
            "text": "building games you will also learn how",
            "start": 3675.359,
            "duration": 4.321
        },
        {
            "text": "to work with Boolean values characters",
            "start": 3677.559,
            "duration": 4.321
        },
        {
            "text": "on strings as well as arrays which we",
            "start": 3679.68,
            "duration": 4.919
        },
        {
            "text": "use for storing a list of values so by",
            "start": 3681.88,
            "duration": 4.4
        },
        {
            "text": "the end of this section you will have a",
            "start": 3684.599,
            "duration": 3.561
        },
        {
            "text": "deep understanding of these fundamental",
            "start": 3686.28,
            "duration": 3.96
        },
        {
            "text": "data types and how to use them to write",
            "start": 3688.16,
            "duration": 5.439
        },
        {
            "text": "useful programs so now let's jump in and",
            "start": 3690.24,
            "duration": 4.37
        },
        {
            "text": "get",
            "start": 3693.599,
            "duration": 12.361
        },
        {
            "text": "started so you have seen that in C++ to",
            "start": 3705.96,
            "duration": 5.639
        },
        {
            "text": "declare a variable we need to specify",
            "start": 3709.359,
            "duration": 5.24
        },
        {
            "text": "its type that's why we say C++ is a",
            "start": 3711.599,
            "duration": 5.361
        },
        {
            "text": "statically typed language meaning when",
            "start": 3714.599,
            "duration": 4.48
        },
        {
            "text": "declaring a variable we need to specify",
            "start": 3716.96,
            "duration": 4.639
        },
        {
            "text": "its type and this type cannot change",
            "start": 3719.079,
            "duration": 4.801
        },
        {
            "text": "throughout the lifetime of our program",
            "start": 3721.599,
            "duration": 3.921
        },
        {
            "text": "other examples of statically type",
            "start": 3723.88,
            "duration": 5
        },
        {
            "text": "languages are C Java typescript and so",
            "start": 3725.52,
            "duration": 5.92
        },
        {
            "text": "on in contrast to statically typed",
            "start": 3728.88,
            "duration": 4.52
        },
        {
            "text": "languages we have dynamically typed",
            "start": 3731.44,
            "duration": 4.44
        },
        {
            "text": "languages like python JavaScript and",
            "start": 3733.4,
            "duration": 5.12
        },
        {
            "text": "Ruby in these languages we don't have to",
            "start": 3735.88,
            "duration": 5.36
        },
        {
            "text": "give our variables a particular type the",
            "start": 3738.52,
            "duration": 5.12
        },
        {
            "text": "type will be determined based on the",
            "start": 3741.24,
            "duration": 3.76
        },
        {
            "text": "value that we assigned to these",
            "start": 3743.64,
            "duration": 3.639
        },
        {
            "text": "variables and that type can change",
            "start": 3745,
            "duration": 4.4
        },
        {
            "text": "throughout the lifetime of our program",
            "start": 3747.279,
            "duration": 4.641
        },
        {
            "text": "okay so that is the difference between",
            "start": 3749.4,
            "duration": 4.52
        },
        {
            "text": "statically and dynamically typed",
            "start": 3751.92,
            "duration": 4.84
        },
        {
            "text": "languages now in C++ we have a bunch of",
            "start": 3753.92,
            "duration": 5.639
        },
        {
            "text": "different built-in data types so far you",
            "start": 3756.76,
            "duration": 5.12
        },
        {
            "text": "have only seen int and double but we",
            "start": 3759.559,
            "duration": 3.681
        },
        {
            "text": "have more built-in types that we're",
            "start": 3761.88,
            "duration": 3.239
        },
        {
            "text": "going to cover in this section in this",
            "start": 3763.24,
            "duration": 3.96
        },
        {
            "text": "lesson I'm going to give you a basic",
            "start": 3765.119,
            "duration": 4.361
        },
        {
            "text": "overview of these types but as we go",
            "start": 3767.2,
            "duration": 4.2
        },
        {
            "text": "through this section you'll become more",
            "start": 3769.48,
            "duration": 5.079
        },
        {
            "text": "familiar with these types so for storing",
            "start": 3771.4,
            "duration": 5.639
        },
        {
            "text": "whole numbers we have int which takes",
            "start": 3774.559,
            "duration": 4.921
        },
        {
            "text": "four bytes of memory on most systems",
            "start": 3777.039,
            "duration": 4.201
        },
        {
            "text": "this is not a hard and fast rule",
            "start": 3779.48,
            "duration": 3.4
        },
        {
            "text": "depending on the implementation the",
            "start": 3781.24,
            "duration": 4.079
        },
        {
            "text": "number of bytes taken by an integer can",
            "start": 3782.88,
            "duration": 4.479
        },
        {
            "text": "vary from one system to another but for",
            "start": 3785.319,
            "duration": 4.04
        },
        {
            "text": "the most part you can assume that an",
            "start": 3787.359,
            "duration": 4.601
        },
        {
            "text": "integer takes four bytes of memory in",
            "start": 3789.359,
            "duration": 4.881
        },
        {
            "text": "four bytes we can store numbers from",
            "start": 3791.96,
            "duration": 5.319
        },
        {
            "text": "minus 2 billion to plus 2 billion now if",
            "start": 3794.24,
            "duration": 5.319
        },
        {
            "text": "you want to store a smaller number we",
            "start": 3797.279,
            "duration": 4.401
        },
        {
            "text": "don't need to waste four bytes of memory",
            "start": 3799.559,
            "duration": 4.441
        },
        {
            "text": "so we can use the short type which takes",
            "start": 3801.68,
            "duration": 4.679
        },
        {
            "text": "two bytes of memory and in byes we can",
            "start": 3804,
            "duration": 6.4
        },
        {
            "text": "store the values from - 32,000 to +",
            "start": 3806.359,
            "duration": 7.2
        },
        {
            "text": "32,000 now for storing larger numbers we",
            "start": 3810.4,
            "duration": 5.959
        },
        {
            "text": "have long which is often the same as int",
            "start": 3813.559,
            "duration": 5.601
        },
        {
            "text": "on most systems and long long which",
            "start": 3816.359,
            "duration": 4.96
        },
        {
            "text": "takes eight bytes of memory and allows",
            "start": 3819.16,
            "duration": 4.639
        },
        {
            "text": "us to store really large numbers",
            "start": 3821.319,
            "duration": 4.401
        },
        {
            "text": "speaking of experience most of the time",
            "start": 3823.799,
            "duration": 5.081
        },
        {
            "text": "you'll be using short or in types unless",
            "start": 3825.72,
            "duration": 5.079
        },
        {
            "text": "you're working on programs that involve",
            "start": 3828.88,
            "duration": 4.56
        },
        {
            "text": "complicated mathematical computations",
            "start": 3830.799,
            "duration": 5.081
        },
        {
            "text": "now for numbers with decimal places",
            "start": 3833.44,
            "duration": 4.8
        },
        {
            "text": "which we call floating Point numbers we",
            "start": 3835.88,
            "duration": 4.679
        },
        {
            "text": "have double which you have seen so far",
            "start": 3838.24,
            "duration": 5.2
        },
        {
            "text": "the double type takes 8 bytes of memory",
            "start": 3840.559,
            "duration": 5.04
        },
        {
            "text": "now we also have float which takes four",
            "start": 3843.44,
            "duration": 4.839
        },
        {
            "text": "bytes of memory and long double which",
            "start": 3845.599,
            "duration": 5.401
        },
        {
            "text": "takes 8 bytes of memory as well again",
            "start": 3848.279,
            "duration": 4.201
        },
        {
            "text": "most of the time you would be using",
            "start": 3851,
            "duration": 4.359
        },
        {
            "text": "double especially for storing monetary",
            "start": 3852.48,
            "duration": 5.119
        },
        {
            "text": "values because the flow type can result",
            "start": 3855.359,
            "duration": 5
        },
        {
            "text": "in loss of accuracy now we also have the",
            "start": 3857.599,
            "duration": 5.401
        },
        {
            "text": "Bull type for storing true and false",
            "start": 3860.359,
            "duration": 4.96
        },
        {
            "text": "values they're often used to represent a",
            "start": 3863,
            "duration": 4.119
        },
        {
            "text": "condition like like is this person",
            "start": 3865.319,
            "duration": 4.561
        },
        {
            "text": "eligible for a loan or not we also have",
            "start": 3867.119,
            "duration": 4.96
        },
        {
            "text": "another built-in type called Char for",
            "start": 3869.88,
            "duration": 5.159
        },
        {
            "text": "storing single characters so that was a",
            "start": 3872.079,
            "duration": 5.361
        },
        {
            "text": "basic overview of the fundamental data",
            "start": 3875.039,
            "duration": 5.361
        },
        {
            "text": "types in C++ again as we go through this",
            "start": 3877.44,
            "duration": 4.879
        },
        {
            "text": "section we'll explore these types in",
            "start": 3880.4,
            "duration": 4.159
        },
        {
            "text": "more",
            "start": 3882.319,
            "duration": 2.24
        },
        {
            "text": "detail now that you're familiar with the",
            "start": 3890.359,
            "duration": 5.48
        },
        {
            "text": "basic built-in types in C++ let's let's",
            "start": 3892.799,
            "duration": 4.961
        },
        {
            "text": "look at a few different ways to declare",
            "start": 3895.839,
            "duration": 4.44
        },
        {
            "text": "and initialize variables so I'm going to",
            "start": 3897.76,
            "duration": 5.96
        },
        {
            "text": "start by declaring a double called price",
            "start": 3900.279,
            "duration": 5.601
        },
        {
            "text": "and we're going to set this to",
            "start": 3903.72,
            "duration": 5.319
        },
        {
            "text": "99.99 nothing new so far but what if we",
            "start": 3905.88,
            "duration": 5.199
        },
        {
            "text": "want to declare a float well we can",
            "start": 3909.039,
            "duration": 5.52
        },
        {
            "text": "declare a float called interest rate and",
            "start": 3911.079,
            "duration": 5.081
        },
        {
            "text": "we set it to",
            "start": 3914.559,
            "duration": 4.081
        },
        {
            "text": "3.67 and here at the end we type the",
            "start": 3916.16,
            "duration": 5.6
        },
        {
            "text": "letter F that is short for float this is",
            "start": 3918.64,
            "duration": 5.04
        },
        {
            "text": "really important because if you don't",
            "start": 3921.76,
            "duration": 4.799
        },
        {
            "text": "type this by default the compiler will",
            "start": 3923.68,
            "duration": 5.24
        },
        {
            "text": "treat this number as a double and then",
            "start": 3926.559,
            "duration": 4.961
        },
        {
            "text": "it will try to store a double inside a",
            "start": 3928.92,
            "duration": 4.359
        },
        {
            "text": "float variable and this can potentially",
            "start": 3931.52,
            "duration": 4
        },
        {
            "text": "cause data loss so when working with",
            "start": 3933.279,
            "duration": 5.641
        },
        {
            "text": "float values always type an F at the end",
            "start": 3935.52,
            "duration": 5.44
        },
        {
            "text": "it can be uppercase or lowercase it",
            "start": 3938.92,
            "duration": 3.84
        },
        {
            "text": "doesn't really matter now there is",
            "start": 3940.96,
            "duration": 3.2
        },
        {
            "text": "another reason we should type this",
            "start": 3942.76,
            "duration": 4
        },
        {
            "text": "letter we'll come back to this shortly",
            "start": 3944.16,
            "duration": 6
        },
        {
            "text": "now let's declare a long so long file",
            "start": 3946.76,
            "duration": 7.12
        },
        {
            "text": "size we can set this to 990,000 now",
            "start": 3950.16,
            "duration": 5.679
        },
        {
            "text": "similar to the float type here we should",
            "start": 3953.88,
            "duration": 4.719
        },
        {
            "text": "add the L suffix because if you don't",
            "start": 3955.839,
            "duration": 5.041
        },
        {
            "text": "type this the compiler will treat this",
            "start": 3958.599,
            "duration": 4.601
        },
        {
            "text": "number as an integer so to force the",
            "start": 3960.88,
            "duration": 5.04
        },
        {
            "text": "compiler to treat this as a long we type",
            "start": 3963.2,
            "duration": 6.24
        },
        {
            "text": "either an uppercase or a lowercase L now",
            "start": 3965.92,
            "duration": 5.679
        },
        {
            "text": "the lowercase L can be confused with the",
            "start": 3969.44,
            "duration": 4.48
        },
        {
            "text": "number one so the best practice is to",
            "start": 3971.599,
            "duration": 6.321
        },
        {
            "text": "use a capital l okay now let's declare a",
            "start": 3973.92,
            "duration": 6.359
        },
        {
            "text": "variable for storing a character so we",
            "start": 3977.92,
            "duration": 5.679
        },
        {
            "text": "say Char letter and here we use single",
            "start": 3980.279,
            "duration": 7
        },
        {
            "text": "quotes to represent a character like a",
            "start": 3983.599,
            "duration": 6.561
        },
        {
            "text": "okay and finally let's look at a",
            "start": 3987.279,
            "duration": 5.08
        },
        {
            "text": "Boolean we're going to call this is",
            "start": 3990.16,
            "duration": 6.08
        },
        {
            "text": "valid and we can set it to true or false",
            "start": 3992.359,
            "duration": 5.76
        },
        {
            "text": "these are the acceptable values for",
            "start": 3996.24,
            "duration": 4.76
        },
        {
            "text": "booleans now with any of these types we",
            "start": 3998.119,
            "duration": 5.48
        },
        {
            "text": "can also use the auto keyword to let the",
            "start": 4001,
            "duration": 5.76
        },
        {
            "text": "compiler infer the type of our variables",
            "start": 4003.599,
            "duration": 7
        },
        {
            "text": "for example if we change bull to Auto",
            "start": 4006.76,
            "duration": 7.079
        },
        {
            "text": "and then hover our Mouse over is",
            "start": 4010.599,
            "duration": 5.96
        },
        {
            "text": "valid look the comp compiler knows that",
            "start": 4013.839,
            "duration": 6.161
        },
        {
            "text": "is valid is of type bull similarly if we",
            "start": 4016.559,
            "duration": 6.401
        },
        {
            "text": "change charart to Auto and look at the",
            "start": 4020,
            "duration": 5.48
        },
        {
            "text": "type of this variable we can see it's of",
            "start": 4022.96,
            "duration": 5.04
        },
        {
            "text": "type chart now here's the interesting",
            "start": 4025.48,
            "duration": 6.079
        },
        {
            "text": "part if we change long to Auto we can",
            "start": 4028,
            "duration": 6.92
        },
        {
            "text": "see that file size is of type long",
            "start": 4031.559,
            "duration": 5.881
        },
        {
            "text": "because we added the letter L at the end",
            "start": 4034.92,
            "duration": 4.639
        },
        {
            "text": "if we don't type this and use the auto",
            "start": 4037.44,
            "duration": 5.32
        },
        {
            "text": "keyword look file size is treated as an",
            "start": 4039.559,
            "duration": 5.76
        },
        {
            "text": "integer so that is why we need to add",
            "start": 4042.76,
            "duration": 6.24
        },
        {
            "text": "this suffix similarly for floats if we",
            "start": 4045.319,
            "duration": 7.081
        },
        {
            "text": "use Auto now we can see interest rate is",
            "start": 4049,
            "duration": 6.319
        },
        {
            "text": "a float but if you remove the suffix it",
            "start": 4052.4,
            "duration": 7.679
        },
        {
            "text": "will be treated as a double right so",
            "start": 4055.319,
            "duration": 6.48
        },
        {
            "text": "this is the benefit of using the auto",
            "start": 4060.079,
            "duration": 3.561
        },
        {
            "text": "keyword it kind of makes our code",
            "start": 4061.799,
            "duration": 3.921
        },
        {
            "text": "shorter and more consistent you don't",
            "start": 4063.64,
            "duration": 3.8
        },
        {
            "text": "have to use it if you don't like it but",
            "start": 4065.72,
            "duration": 3.879
        },
        {
            "text": "the auto keyword is particularly useful",
            "start": 4067.44,
            "duration": 3.96
        },
        {
            "text": "when working with more complex types",
            "start": 4069.599,
            "duration": 3.881
        },
        {
            "text": "we'll look at that in the future now",
            "start": 4071.4,
            "duration": 3.56
        },
        {
            "text": "there is one more way to initialize",
            "start": 4073.48,
            "duration": 3.879
        },
        {
            "text": "variables in modern C++ that you need to",
            "start": 4074.96,
            "duration": 4.48
        },
        {
            "text": "know and that's called brace",
            "start": 4077.359,
            "duration": 4.48
        },
        {
            "text": "initialization so let me delete all this",
            "start": 4079.44,
            "duration": 4.96
        },
        {
            "text": "code and declare an integer called",
            "start": 4081.839,
            "duration": 5.041
        },
        {
            "text": "number and set it to",
            "start": 4084.4,
            "duration": 5.48
        },
        {
            "text": "1.2 now here we get a warning because we",
            "start": 4086.88,
            "duration": 5.239
        },
        {
            "text": "have a yellow underline but our code",
            "start": 4089.88,
            "duration": 5.279
        },
        {
            "text": "still gets compiled so if we print",
            "start": 4092.119,
            "duration": 6.281
        },
        {
            "text": "number and run our program we see the",
            "start": 4095.159,
            "duration": 5.6
        },
        {
            "text": "fraction part is gone and we see one",
            "start": 4098.4,
            "duration": 4.279
        },
        {
            "text": "okay now there is another way to",
            "start": 4100.759,
            "duration": 4.4
        },
        {
            "text": "initialize this variable and prevent",
            "start": 4102.679,
            "duration": 4.48
        },
        {
            "text": "this kind of scenario where we assign",
            "start": 4105.159,
            "duration": 5
        },
        {
            "text": "the wrong value to a variable so instead",
            "start": 4107.159,
            "duration": 7
        },
        {
            "text": "of the assignment operator we use braces",
            "start": 4110.159,
            "duration": 7.2
        },
        {
            "text": "so we put this value inside braces now",
            "start": 4114.159,
            "duration": 5.2
        },
        {
            "text": "look we have a compilation error because",
            "start": 4117.359,
            "duration": 4.241
        },
        {
            "text": "we have a red underline so our code is",
            "start": 4119.359,
            "duration": 3.92
        },
        {
            "text": "not going to get compiled the brace",
            "start": 4121.6,
            "duration": 4.119
        },
        {
            "text": "initializer stops us from making such",
            "start": 4123.279,
            "duration": 4.761
        },
        {
            "text": "mistakes now there is another benefit to",
            "start": 4125.719,
            "duration": 5.04
        },
        {
            "text": "using brace initialization if we don't",
            "start": 4128.04,
            "duration": 6.119
        },
        {
            "text": "Supply a value here our number variable",
            "start": 4130.759,
            "duration": 6
        },
        {
            "text": "will be initialized to zero so if you",
            "start": 4134.159,
            "duration": 6.56
        },
        {
            "text": "run this program we see number is zero",
            "start": 4136.759,
            "duration": 6.801
        },
        {
            "text": "however if you remove the empty",
            "start": 4140.719,
            "duration": 5.56
        },
        {
            "text": "initializer here and run our program",
            "start": 4143.56,
            "duration": 5.159
        },
        {
            "text": "again you can see we get this random",
            "start": 4146.279,
            "duration": 4.52
        },
        {
            "text": "value which we say it's garbage and",
            "start": 4148.719,
            "duration": 5.321
        },
        {
            "text": "every time we run our program we get a",
            "start": 4150.799,
            "duration": 4.801
        },
        {
            "text": "different value so this makes our",
            "start": 4154.04,
            "duration": 4.119
        },
        {
            "text": "programs unpredictable so we should",
            "start": 4155.6,
            "duration": 4.559
        },
        {
            "text": "either initialize our variables using",
            "start": 4158.159,
            "duration": 4.441
        },
        {
            "text": "the assignment operator to a proper",
            "start": 4160.159,
            "duration": 7.921
        },
        {
            "text": "value or we should use an empty brace",
            "start": 4162.6,
            "duration": 5.48
        },
        {
            "text": "initializer in math and programming we",
            "start": 4174.279,
            "duration": 4.88
        },
        {
            "text": "have different number systems that serve",
            "start": 4177.08,
            "duration": 4.159
        },
        {
            "text": "different purposes in our day-to-day",
            "start": 4179.159,
            "duration": 5.04
        },
        {
            "text": "life we use decimal or base 10 numbers",
            "start": 4181.239,
            "duration": 5.96
        },
        {
            "text": "which can contain digits 0 to 9 but",
            "start": 4184.199,
            "duration": 5.201
        },
        {
            "text": "computers don't understand these digits",
            "start": 4187.199,
            "duration": 4.881
        },
        {
            "text": "they only understand zeros and ones",
            "start": 4189.4,
            "duration": 4.6
        },
        {
            "text": "that's why we have the binary or base",
            "start": 4192.08,
            "duration": 4.48
        },
        {
            "text": "two system so the number in this system",
            "start": 4194,
            "duration": 5.239
        },
        {
            "text": "can only contain zeros and ones now we",
            "start": 4196.56,
            "duration": 4.96
        },
        {
            "text": "can take any number and represent it as",
            "start": 4199.239,
            "duration": 5.521
        },
        {
            "text": "a binary for example the number 255 in",
            "start": 4201.52,
            "duration": 6.159
        },
        {
            "text": "the decimal system is equivalent to 8",
            "start": 4204.76,
            "duration": 5.36
        },
        {
            "text": "1es in the binary system it's a very",
            "start": 4207.679,
            "duration": 4.241
        },
        {
            "text": "long number that's why we use the",
            "start": 4210.12,
            "duration": 4.599
        },
        {
            "text": "heximal or base extend numbers to",
            "start": 4211.92,
            "duration": 6.04
        },
        {
            "text": "shorten binary numbers a heximal number",
            "start": 4214.719,
            "duration": 6.121
        },
        {
            "text": "can contain the digits 0 to 9 as well as",
            "start": 4217.96,
            "duration": 5.64
        },
        {
            "text": "the letters a to f as you can see",
            "start": 4220.84,
            "duration": 5.399
        },
        {
            "text": "heximal numbers are more common compact",
            "start": 4223.6,
            "duration": 4.92
        },
        {
            "text": "now in programming we use heximal",
            "start": 4226.239,
            "duration": 4.801
        },
        {
            "text": "numbers to represent colors you probably",
            "start": 4228.52,
            "duration": 6.28
        },
        {
            "text": "heard of RGB or red green blue colors",
            "start": 4231.04,
            "duration": 6.32
        },
        {
            "text": "using only six digits of a heximal",
            "start": 4234.8,
            "duration": 5.04
        },
        {
            "text": "number we can represent any color that's",
            "start": 4237.36,
            "duration": 4.52
        },
        {
            "text": "very useful we don't have to deal with",
            "start": 4239.84,
            "duration": 4.879
        },
        {
            "text": "really large decimal or binary numbers",
            "start": 4241.88,
            "duration": 4.52
        },
        {
            "text": "now let's see how we can represent these",
            "start": 4244.719,
            "duration": 2.881
        },
        {
            "text": "numbers in",
            "start": 4246.4,
            "duration": 3.759
        },
        {
            "text": "C++ so I'm going to declare an integer",
            "start": 4247.6,
            "duration": 6.24
        },
        {
            "text": "called number and set it to 255 now if",
            "start": 4250.159,
            "duration": 5.601
        },
        {
            "text": "you want to represent this number in the",
            "start": 4253.84,
            "duration": 6.04
        },
        {
            "text": "binary system we type z b as a prefix",
            "start": 4255.76,
            "duration": 6.439
        },
        {
            "text": "and then we type a binary number I'm",
            "start": 4259.88,
            "duration": 7.279
        },
        {
            "text": "going to type 8 ones so 1 2 3 4 5 6 7 8",
            "start": 4262.199,
            "duration": 9.161
        },
        {
            "text": "now let's print the number take a look",
            "start": 4267.159,
            "duration": 7.08
        },
        {
            "text": "we get 255 okay now we can represent the",
            "start": 4271.36,
            "duration": 5.72
        },
        {
            "text": "same number in the hexo decimal system",
            "start": 4274.239,
            "duration": 6.561
        },
        {
            "text": "so instead of 0 B we type 0x and then we",
            "start": 4277.08,
            "duration": 6.48
        },
        {
            "text": "type a hexo decimal number in this case",
            "start": 4280.8,
            "duration": 5.48
        },
        {
            "text": "double F which can be operate case or",
            "start": 4283.56,
            "duration": 4.96
        },
        {
            "text": "door case it doesn't really matter let's",
            "start": 4286.28,
            "duration": 5.04
        },
        {
            "text": "run our program one more time look we",
            "start": 4288.52,
            "duration": 5.52
        },
        {
            "text": "get the same number beautiful now most",
            "start": 4291.32,
            "duration": 5.8
        },
        {
            "text": "of the time I would say 99% of the time",
            "start": 4294.04,
            "duration": 5.24
        },
        {
            "text": "we use decimal numbers but depending on",
            "start": 4297.12,
            "duration": 4.079
        },
        {
            "text": "the kind of application you're building",
            "start": 4299.28,
            "duration": 3.56
        },
        {
            "text": "in some situations you may want to",
            "start": 4301.199,
            "duration": 4
        },
        {
            "text": "represent a number as binary or",
            "start": 4302.84,
            "duration": 5.12
        },
        {
            "text": "hexadecimal okay now irrespective of how",
            "start": 4305.199,
            "duration": 5.081
        },
        {
            "text": "we represent numbers our numbers can be",
            "start": 4307.96,
            "duration": 5
        },
        {
            "text": "positive or negative if we dealing with",
            "start": 4310.28,
            "duration": 4.32
        },
        {
            "text": "a positive number we don't have to type",
            "start": 4312.96,
            "duration": 4.56
        },
        {
            "text": "a positive sign it's assumed by default",
            "start": 4314.6,
            "duration": 4.88
        },
        {
            "text": "but for negative numbers obviously we",
            "start": 4317.52,
            "duration": 5.48
        },
        {
            "text": "have to type a minus now in C++ we have",
            "start": 4319.48,
            "duration": 7.08
        },
        {
            "text": "a special keyword called unsigned if you",
            "start": 4323,
            "duration": 6.639
        },
        {
            "text": "apply this to a numerical type that type",
            "start": 4326.56,
            "duration": 5.639
        },
        {
            "text": "cannot accept negative values now on the",
            "start": 4329.639,
            "duration": 3.961
        },
        {
            "text": "surface you might think this is a good",
            "start": 4332.199,
            "duration": 3.361
        },
        {
            "text": "value but it can actually cause",
            "start": 4333.6,
            "duration": 3.8
        },
        {
            "text": "programming problems that are hard to",
            "start": 4335.56,
            "duration": 4.44
        },
        {
            "text": "spot for example let's print this number",
            "start": 4337.4,
            "duration": 4.92
        },
        {
            "text": "on the console and see what we",
            "start": 4340,
            "duration": 6.04
        },
        {
            "text": "get so we get this really large positive",
            "start": 4342.32,
            "duration": 6.52
        },
        {
            "text": "number as another example we might",
            "start": 4346.04,
            "duration": 5.28
        },
        {
            "text": "initialize this number to zero and then",
            "start": 4348.84,
            "duration": 4.72
        },
        {
            "text": "somewhere else in our program we might",
            "start": 4351.32,
            "duration": 5.28
        },
        {
            "text": "decrement this number now if we print",
            "start": 4353.56,
            "duration": 5.159
        },
        {
            "text": "this instead of negative one we're going",
            "start": 4356.6,
            "duration": 4.92
        },
        {
            "text": "to get this really large positive number",
            "start": 4358.719,
            "duration": 5.081
        },
        {
            "text": "so my suggestion is to stay away from",
            "start": 4361.52,
            "duration": 4.88
        },
        {
            "text": "the unsigned keyword just because C++",
            "start": 4363.8,
            "duration": 4.16
        },
        {
            "text": "has this feature doesn't mean you should",
            "start": 4366.4,
            "duration": 4.08
        },
        {
            "text": "use it that's why earlier in the course",
            "start": 4367.96,
            "duration": 4.279
        },
        {
            "text": "I told you that you don't need to learn",
            "start": 4370.48,
            "duration": 4.28
        },
        {
            "text": "all of C++ all of its features to build",
            "start": 4372.239,
            "duration": 6.321
        },
        {
            "text": "use and substantial programs so stay",
            "start": 4374.76,
            "duration": 6.959
        },
        {
            "text": "away from the unsigned",
            "start": 4378.56,
            "duration": 3.159
        },
        {
            "text": "keyword when working with numbers a",
            "start": 4387.96,
            "duration": 5
        },
        {
            "text": "concept unit to understand is narrowing",
            "start": 4390.56,
            "duration": 4.32
        },
        {
            "text": "and that happens when you initialize a",
            "start": 4392.96,
            "duration": 4
        },
        {
            "text": "variable of a smaller type using a",
            "start": 4394.88,
            "duration": 4.48
        },
        {
            "text": "larger type here's an example let's",
            "start": 4396.96,
            "duration": 4.96
        },
        {
            "text": "declare an integer called number and set",
            "start": 4399.36,
            "duration": 3.68
        },
        {
            "text": "it to 1",
            "start": 4401.92,
            "duration": 3.2
        },
        {
            "text": "million now to make this code more",
            "start": 4403.04,
            "duration": 4.76
        },
        {
            "text": "readable we can separate these digits",
            "start": 4405.12,
            "duration": 6.039
        },
        {
            "text": "using a single quote that's better now",
            "start": 4407.8,
            "duration": 5.919
        },
        {
            "text": "let's declare a short called another and",
            "start": 4411.159,
            "duration": 3.601
        },
        {
            "text": "set it to",
            "start": 4413.719,
            "duration": 3.161
        },
        {
            "text": "number now we immediately get this",
            "start": 4414.76,
            "duration": 5.72
        },
        {
            "text": "warning saying narrowing conversion from",
            "start": 4416.88,
            "duration": 6.88
        },
        {
            "text": "int to sign type short is implementation",
            "start": 4420.48,
            "duration": 5.88
        },
        {
            "text": "defined I know it's a mouthful basically",
            "start": 4423.76,
            "duration": 4.399
        },
        {
            "text": "the warning is saying that because we're",
            "start": 4426.36,
            "duration": 4.52
        },
        {
            "text": "converting an integer to a short this",
            "start": 4428.159,
            "duration": 5.201
        },
        {
            "text": "conversion is a narrowing conversion so",
            "start": 4430.88,
            "duration": 4.68
        },
        {
            "text": "it's going to result in narrowing down",
            "start": 4433.36,
            "duration": 4.96
        },
        {
            "text": "our number which is 1 million so now if",
            "start": 4435.56,
            "duration": 4
        },
        {
            "text": "we",
            "start": 4438.32,
            "duration": 5.76
        },
        {
            "text": "print another and run our program we see",
            "start": 4439.56,
            "duration": 7.079
        },
        {
            "text": "16,000 this is the result of narrowing",
            "start": 4444.08,
            "duration": 5.44
        },
        {
            "text": "conversion now obviously if we used a",
            "start": 4446.639,
            "duration": 4.881
        },
        {
            "text": "brace initializer",
            "start": 4449.52,
            "duration": 4.4
        },
        {
            "text": "here we could prevent this our code",
            "start": 4451.52,
            "duration": 4.56
        },
        {
            "text": "wouldn't even get compiled so this is",
            "start": 4453.92,
            "duration": 4.319
        },
        {
            "text": "another benefit of the brace initializer",
            "start": 4456.08,
            "duration": 5.36
        },
        {
            "text": "okay now what if we do the opposite what",
            "start": 4458.239,
            "duration": 5.521
        },
        {
            "text": "if we declare this number as",
            "start": 4461.44,
            "duration": 6.32
        },
        {
            "text": "short and put it in an integer now in",
            "start": 4463.76,
            "duration": 6.16
        },
        {
            "text": "this case we have a warning because this",
            "start": 4467.76,
            "duration": 5.6
        },
        {
            "text": "number is too large to fit in a short",
            "start": 4469.92,
            "duration": 5.759
        },
        {
            "text": "variable because as I told you earlier",
            "start": 4473.36,
            "duration": 4.48
        },
        {
            "text": "using the short data type we can store",
            "start": 4475.679,
            "duration": 6.56
        },
        {
            "text": "numbers from minus 32,000 to plus 32,000",
            "start": 4477.84,
            "duration": 8.799
        },
        {
            "text": "so let's change this to let's just say",
            "start": 4482.239,
            "duration": 8.201
        },
        {
            "text": "100 and then put it in an integer now we",
            "start": 4486.639,
            "duration": 5.961
        },
        {
            "text": "can use the brace initializer or the",
            "start": 4490.44,
            "duration": 3.64
        },
        {
            "text": "assignment operator it doesn't really",
            "start": 4492.6,
            "duration": 4.2
        },
        {
            "text": "matter let's run our",
            "start": 4494.08,
            "duration": 5.92
        },
        {
            "text": "program we get 100 so the opposite is",
            "start": 4496.8,
            "duration": 5.919
        },
        {
            "text": "not an issue so the short type takes two",
            "start": 4500,
            "duration": 5.639
        },
        {
            "text": "bytes the integer takes four bytes if",
            "start": 4502.719,
            "duration": 5.641
        },
        {
            "text": "you store a smaller number in the larger",
            "start": 4505.639,
            "duration": 4.241
        },
        {
            "text": "memory space we're not going to",
            "start": 4508.36,
            "duration": 4.12
        },
        {
            "text": "encounter data loss so the additional",
            "start": 4509.88,
            "duration": 4.359
        },
        {
            "text": "bytes in memory are going to be filled",
            "start": 4512.48,
            "duration": 3.96
        },
        {
            "text": "with",
            "start": 4514.239,
            "duration": 2.201
        },
        {
            "text": "zero all right now let's see how we can",
            "start": 4521.88,
            "duration": 5.359
        },
        {
            "text": "generate round random numbers in C++",
            "start": 4524.12,
            "duration": 5.079
        },
        {
            "text": "this is very useful we can use random",
            "start": 4527.239,
            "duration": 4.281
        },
        {
            "text": "numbers in creating games that involve",
            "start": 4529.199,
            "duration": 5.841
        },
        {
            "text": "rolling a dice card or other elements so",
            "start": 4531.52,
            "duration": 5.76
        },
        {
            "text": "we have a function called Rand that is",
            "start": 4535.04,
            "duration": 6.28
        },
        {
            "text": "defined in a library called cstd lip so",
            "start": 4537.28,
            "duration": 6.359
        },
        {
            "text": "on the top we need to include another",
            "start": 4541.32,
            "duration": 5.08
        },
        {
            "text": "file from the standard Library called C",
            "start": 4543.639,
            "duration": 7.681
        },
        {
            "text": "STD lib okay now we call this function",
            "start": 4546.4,
            "duration": 7.12
        },
        {
            "text": "and get a random integer so let's store",
            "start": 4551.32,
            "duration": 5.64
        },
        {
            "text": "it here and then print it on the",
            "start": 4553.52,
            "duration": 6.08
        },
        {
            "text": "terminal now let's run this",
            "start": 4556.96,
            "duration": 5.16
        },
        {
            "text": "program so this is the number I get on",
            "start": 4559.6,
            "duration": 3.88
        },
        {
            "text": "your machine you're probably going to",
            "start": 4562.12,
            "duration": 3.4
        },
        {
            "text": "get something different now here's the",
            "start": 4563.48,
            "duration": 5.08
        },
        {
            "text": "thing every time we run this program we",
            "start": 4565.52,
            "duration": 6.48
        },
        {
            "text": "get the exact same number the reason for",
            "start": 4568.56,
            "duration": 5.2
        },
        {
            "text": "this is that these numbers are not",
            "start": 4572,
            "duration": 4
        },
        {
            "text": "really random they're basically based on",
            "start": 4573.76,
            "duration": 4.76
        },
        {
            "text": "some kind of mathematical formula so to",
            "start": 4576,
            "duration": 4.76
        },
        {
            "text": "get a random number we need to see the",
            "start": 4578.52,
            "duration": 4.28
        },
        {
            "text": "random number generator with a different",
            "start": 4580.76,
            "duration": 5.12
        },
        {
            "text": "value let me show you what I mean so we",
            "start": 4582.8,
            "duration": 6.48
        },
        {
            "text": "have another function called s Rand that",
            "start": 4585.88,
            "duration": 7
        },
        {
            "text": "is short for seed Rand if you see the",
            "start": 4589.28,
            "duration": 5.76
        },
        {
            "text": "random number generator with the value",
            "start": 4592.88,
            "duration": 7.319
        },
        {
            "text": "of five now we get a different random",
            "start": 4595.04,
            "duration": 8.08
        },
        {
            "text": "value but again every time we run this",
            "start": 4600.199,
            "duration": 6.121
        },
        {
            "text": "program we get the exact same random",
            "start": 4603.12,
            "duration": 6.559
        },
        {
            "text": "number if we see this with a different",
            "start": 4606.32,
            "duration": 5.68
        },
        {
            "text": "number now our random number is going to",
            "start": 4609.679,
            "duration": 5.361
        },
        {
            "text": "be different so how can we get truly",
            "start": 4612,
            "duration": 5.56
        },
        {
            "text": "random numbers well we have a function",
            "start": 4615.04,
            "duration": 4.679
        },
        {
            "text": "for getting the current time in terms of",
            "start": 4617.56,
            "duration": 4.679
        },
        {
            "text": "the number of seconds elapsed from",
            "start": 4619.719,
            "duration": 6.081
        },
        {
            "text": "January 1970 if we use that function",
            "start": 4622.239,
            "duration": 5.201
        },
        {
            "text": "every time we run our program we're",
            "start": 4625.8,
            "duration": 3.64
        },
        {
            "text": "going to get a different number let me",
            "start": 4627.44,
            "duration": 4.16
        },
        {
            "text": "show",
            "start": 4629.44,
            "duration": 5.199
        },
        {
            "text": "you so first on the top we need to",
            "start": 4631.6,
            "duration": 6.559
        },
        {
            "text": "include another file called ctime in",
            "start": 4634.639,
            "duration": 8
        },
        {
            "text": "this file we have a function called time",
            "start": 4638.159,
            "duration": 6.921
        },
        {
            "text": "that Returns the current time in terms",
            "start": 4642.639,
            "duration": 4.56
        },
        {
            "text": "of number of seconds elapsed from",
            "start": 4645.08,
            "duration": 5.599
        },
        {
            "text": "January 1st 1970 now to call this",
            "start": 4647.199,
            "duration": 5.52
        },
        {
            "text": "function we have to give it a special",
            "start": 4650.679,
            "duration": 6.04
        },
        {
            "text": "argument called null pointer or null PTR",
            "start": 4652.719,
            "duration": 5.401
        },
        {
            "text": "we'll talk about this later in the",
            "start": 4656.719,
            "duration": 3.52
        },
        {
            "text": "course if this is too confusing for you",
            "start": 4658.12,
            "duration": 5.599
        },
        {
            "text": "just use the number zero but C lion is",
            "start": 4660.239,
            "duration": 5.321
        },
        {
            "text": "going to give us a warning don't worry",
            "start": 4663.719,
            "duration": 3.761
        },
        {
            "text": "about that it's just suggesting to use",
            "start": 4665.56,
            "duration": 5.28
        },
        {
            "text": "null pointer now this returns a long",
            "start": 4667.48,
            "duration": 7.44
        },
        {
            "text": "value which is El lapsed seconds so to",
            "start": 4670.84,
            "duration": 6.96
        },
        {
            "text": "see this in action instead of printing a",
            "start": 4674.92,
            "duration": 6
        },
        {
            "text": "random number let's print the elapsed",
            "start": 4677.8,
            "duration": 5.399
        },
        {
            "text": "seconds now if you're on our",
            "start": 4680.92,
            "duration": 4.96
        },
        {
            "text": "program this is the number of seconds",
            "start": 4683.199,
            "duration": 6
        },
        {
            "text": "elapsed from January 1st 1970 now every",
            "start": 4685.88,
            "duration": 6
        },
        {
            "text": "time we run our program we get a",
            "start": 4689.199,
            "duration": 5.401
        },
        {
            "text": "different value right so we can use this",
            "start": 4691.88,
            "duration": 6.56
        },
        {
            "text": "to se the random number generator so",
            "start": 4694.6,
            "duration": 6.079
        },
        {
            "text": "instead of hardcoding the number six we",
            "start": 4698.44,
            "duration": 6.68
        },
        {
            "text": "can use elapsed seconds now we gener a",
            "start": 4700.679,
            "duration": 7.281
        },
        {
            "text": "random number and print it on the",
            "start": 4705.12,
            "duration": 4.72
        },
        {
            "text": "terminal take a",
            "start": 4707.96,
            "duration": 5.679
        },
        {
            "text": "look so every time we at our program we",
            "start": 4709.84,
            "duration": 6.68
        },
        {
            "text": "get a different random number great but",
            "start": 4713.639,
            "duration": 5.161
        },
        {
            "text": "this random number is way too large what",
            "start": 4716.52,
            "duration": 4.719
        },
        {
            "text": "if you want to specify an upper limit",
            "start": 4718.8,
            "duration": 6.28
        },
        {
            "text": "well over here where we generate the",
            "start": 4721.239,
            "duration": 4.721
        },
        {
            "text": "random",
            "start": 4725.08,
            "duration": 4.36
        },
        {
            "text": "number we can use the modulus operator",
            "start": 4725.96,
            "duration": 5.92
        },
        {
            "text": "and specify the upper limit so if you",
            "start": 4729.44,
            "duration": 4.84
        },
        {
            "text": "type 10 that's going to return the",
            "start": 4731.88,
            "duration": 5
        },
        {
            "text": "remainder of division by 10 so that can",
            "start": 4734.28,
            "duration": 7.08
        },
        {
            "text": "only be numbers 0 to 9 right take a look",
            "start": 4736.88,
            "duration": 6.799
        },
        {
            "text": "so now we have two if we run our program",
            "start": 4741.36,
            "duration": 5.44
        },
        {
            "text": "again we get nine three and so on",
            "start": 4743.679,
            "duration": 5.361
        },
        {
            "text": "beautiful now we have a warning here",
            "start": 4746.8,
            "duration": 5.32
        },
        {
            "text": "under Rand the warning is saying the",
            "start": 4749.04,
            "duration": 5.92
        },
        {
            "text": "Rand function has limited Randomness use",
            "start": 4752.12,
            "duration": 6.519
        },
        {
            "text": "C++ 11 random Library instead so in C++",
            "start": 4754.96,
            "duration": 5.4
        },
        {
            "text": "11 we have a different way for",
            "start": 4758.639,
            "duration": 3.681
        },
        {
            "text": "generating random numbers but that's",
            "start": 4760.36,
            "duration": 3.96
        },
        {
            "text": "more complicated it's not suitable for",
            "start": 4762.32,
            "duration": 4.44
        },
        {
            "text": "beginners so for now this is a good way",
            "start": 4764.32,
            "duration": 4.96
        },
        {
            "text": "for you to learn how to generate random",
            "start": 4766.76,
            "duration": 4.76
        },
        {
            "text": "numbers now we can make this code a",
            "start": 4769.28,
            "duration": 4.28
        },
        {
            "text": "little bit more concise in this case we",
            "start": 4771.52,
            "duration": 4.44
        },
        {
            "text": "don't really need this variable a lapse",
            "start": 4773.56,
            "duration": 5.56
        },
        {
            "text": "seconds because anyone familiar with C++",
            "start": 4775.96,
            "duration": 6.679
        },
        {
            "text": "knows that time of zero or time of null",
            "start": 4779.12,
            "duration": 6.079
        },
        {
            "text": "pointer Returns the current time in",
            "start": 4782.639,
            "duration": 5.04
        },
        {
            "text": "terms of number of elapse seconds so we",
            "start": 4785.199,
            "duration": 5.52
        },
        {
            "text": "can grab this function and pass it as an",
            "start": 4787.679,
            "duration": 6.361
        },
        {
            "text": "argument to the srand function and now",
            "start": 4790.719,
            "duration": 6.92
        },
        {
            "text": "we don't need the extra variable so this",
            "start": 4794.04,
            "duration": 5.8
        },
        {
            "text": "function will return a value and that",
            "start": 4797.639,
            "duration": 4.04
        },
        {
            "text": "value is going to be passed to this",
            "start": 4799.84,
            "duration": 4.799
        },
        {
            "text": "function as an argument okay so this is",
            "start": 4801.679,
            "duration": 5.681
        },
        {
            "text": "how we can Generate random numbers in",
            "start": 4804.639,
            "duration": 5.321
        },
        {
            "text": "C++ now as an exercise I want you to",
            "start": 4807.36,
            "duration": 5.08
        },
        {
            "text": "write a program to roll a dice so every",
            "start": 4809.96,
            "duration": 4.52
        },
        {
            "text": "time we run this program we should get",
            "start": 4812.44,
            "duration": 4.799
        },
        {
            "text": "two random values between 1 to six now",
            "start": 4814.48,
            "duration": 4.719
        },
        {
            "text": "to limit the range of the random number",
            "start": 4817.239,
            "duration": 3.96
        },
        {
            "text": "use this formula on the screen you will",
            "start": 4819.199,
            "duration": 6
        },
        {
            "text": "see my solution next",
            "start": 4821.199,
            "duration": 4
        },
        {
            "text": "all right let's look at my solution so",
            "start": 4827.84,
            "duration": 4.44
        },
        {
            "text": "on the top we are including three files",
            "start": 4829.84,
            "duration": 6.24
        },
        {
            "text": "iio stream CSD lip and C time now in the",
            "start": 4832.28,
            "duration": 6.399
        },
        {
            "text": "main function we are seing the random",
            "start": 4836.08,
            "duration": 5.079
        },
        {
            "text": "number generator with the current time",
            "start": 4838.679,
            "duration": 5.201
        },
        {
            "text": "now to generate a random value we're",
            "start": 4841.159,
            "duration": 4.401
        },
        {
            "text": "going to use the formula I showed you",
            "start": 4843.88,
            "duration": 5.08
        },
        {
            "text": "earlier so we call the Rand function and",
            "start": 4845.56,
            "duration": 6
        },
        {
            "text": "then get the remainder of division by",
            "start": 4848.96,
            "duration": 6.12
        },
        {
            "text": "this expression our maximum value is six",
            "start": 4851.56,
            "duration": 5.44
        },
        {
            "text": "our minimum value is one and then we",
            "start": 4855.08,
            "duration": 4.599
        },
        {
            "text": "need to add one to it now someone else",
            "start": 4857,
            "duration": 4.76
        },
        {
            "text": "looking at this code will probably have",
            "start": 4859.679,
            "duration": 4.96
        },
        {
            "text": "no idea what these numbers represent",
            "start": 4861.76,
            "duration": 4.399
        },
        {
            "text": "that's why I told you that you should",
            "start": 4864.639,
            "duration": 4.08
        },
        {
            "text": "avoid magic numbers so this is a great",
            "start": 4866.159,
            "duration": 5.401
        },
        {
            "text": "opportunity to use a constant so we",
            "start": 4868.719,
            "duration": 6.121
        },
        {
            "text": "Define two constants constant integer",
            "start": 4871.56,
            "duration": 7.48
        },
        {
            "text": "mean value of one and constant integer",
            "start": 4874.84,
            "duration": 7.64
        },
        {
            "text": "max value of six now here we can use the",
            "start": 4879.04,
            "duration": 5.119
        },
        {
            "text": "short type because we don't really need",
            "start": 4882.48,
            "duration": 4.159
        },
        {
            "text": "to store or large numbers here so it's",
            "start": 4884.159,
            "duration": 4.801
        },
        {
            "text": "better to use the short type to save",
            "start": 4886.639,
            "duration": 4.6
        },
        {
            "text": "system resources the memory so we have",
            "start": 4888.96,
            "duration": 5.8
        },
        {
            "text": "two constants now instead of hardcoding",
            "start": 4891.239,
            "duration": 6.681
        },
        {
            "text": "these magic numbers we use our constants",
            "start": 4894.76,
            "duration": 6.04
        },
        {
            "text": "and this makes our code more readable",
            "start": 4897.92,
            "duration": 5.64
        },
        {
            "text": "and easier to understand okay so using",
            "start": 4900.8,
            "duration": 4.879
        },
        {
            "text": "the modulus operator we get the",
            "start": 4903.56,
            "duration": 4.679
        },
        {
            "text": "remainder of division by this expression",
            "start": 4905.679,
            "duration": 5.04
        },
        {
            "text": "now we need to wrap the whole thing in",
            "start": 4908.239,
            "duration": 5.48
        },
        {
            "text": "parenthesis and add the minimum value to",
            "start": 4910.719,
            "duration": 5.321
        },
        {
            "text": "it this will give us a random number",
            "start": 4913.719,
            "duration": 6.161
        },
        {
            "text": "between 1 to six so we can store it in a",
            "start": 4916.04,
            "duration": 6.599
        },
        {
            "text": "variable called die one or first",
            "start": 4919.88,
            "duration": 5.04
        },
        {
            "text": "whatever you prefer then we need to",
            "start": 4922.639,
            "duration": 5.04
        },
        {
            "text": "duplicate this and create a second",
            "start": 4924.92,
            "duration": 5.16
        },
        {
            "text": "variable called",
            "start": 4927.679,
            "duration": 6.52
        },
        {
            "text": "second and finally we can print",
            "start": 4930.08,
            "duration": 6.84
        },
        {
            "text": "everything using SE out so first here we",
            "start": 4934.199,
            "duration": 5.44
        },
        {
            "text": "chain the stream insertion operator we",
            "start": 4936.92,
            "duration": 6.759
        },
        {
            "text": "can add a comma and the second variable",
            "start": 4939.639,
            "duration": 5.6
        },
        {
            "text": "now let's run",
            "start": 4943.679,
            "duration": 4
        },
        {
            "text": "program so we get three and four one",
            "start": 4945.239,
            "duration": 7.081
        },
        {
            "text": "more time 5 and six 6 and six",
            "start": 4947.679,
            "duration": 4.641
        },
        {
            "text": "beautiful we have reached the end of",
            "start": 4952.52,
            "duration": 4.44
        },
        {
            "text": "this tutorial again as I said this",
            "start": 4954.52,
            "duration": 4.48
        },
        {
            "text": "tutorial is the first hour of my",
            "start": 4956.96,
            "duration": 4.6
        },
        {
            "text": "complete C++ Series so if you want to",
            "start": 4959,
            "duration": 4.719
        },
        {
            "text": "learn more use the link below this video",
            "start": 4961.56,
            "duration": 4.36
        },
        {
            "text": "to enroll and please support me by",
            "start": 4963.719,
            "duration": 4.52
        },
        {
            "text": "liking and sharing this video thank you",
            "start": 4965.92,
            "duration": 5.24
        },
        {
            "text": "so much and have a fantastic day",
            "start": 4968.239,
            "duration": 7.071
        }
    ]
}